{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/builder/builder.component.ts","./src/app/components/builder/builder.component.html","./src/app/components/controls/division-select/division-select.component.ts","./src/app/components/controls/division-select/division-select.component.html","./src/app/components/controls/month-select/month-select.component.ts","./src/app/components/controls/month-select/month-select.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/preferences/preferences.component.ts","./src/app/components/preferences/preferences.component.html","./src/app/components/report/report.component.ts","./src/app/components/report/report.component.html","./src/app/components/sections/abstract-section/abstract-section.component.ts","./src/app/components/sections/abstract-section/abstract-section.component.html","./src/app/components/sections/datagrid-section/datagrid-section.component.ts","./src/app/components/sections/datagrid-section/datagrid-section.component.html","./src/app/components/sections/simple-input/simple-input.component.ts","./src/app/components/sections/simple-input/simple-input.component.html","./src/app/components/start/start.component.ts","./src/app/components/start/start.component.html","./src/app/services/constant.service.ts","./src/app/services/report.service.ts","./src/app/services/template.service.ts","./src/app/services/user.service.ts","./src/assets/env.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BuilderComponent } from './components/builder/builder.component';\nimport { PreferencesComponent } from './components/preferences/preferences.component';\nimport { ReportComponent } from './components/report/report.component';\nimport { StartComponent } from './components/start/start.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {\n  canActivate,\n  redirectUnauthorizedTo,\n  AngularFireAuthGuard,\n  redirectLoggedInTo,\n  emailVerified,\n  loggedIn,\n} from '@angular/fire/auth-guard';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['login']);\nconst rejectUnverified = () => emailVerified;\nmap((user) => {\n  console.log(user);\n});\nconst routes: Routes = [\n  {\n    path: 'report/:report-id/:page-number',\n    component: ReportComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: rejectUnverified },\n  },\n  {\n    path: 'preferences',\n    component: PreferencesComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: rejectUnverified },\n  },\n  {\n    path: 'builder',\n    component: BuilderComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: rejectUnverified },\n  },\n  {\n    path: '',\n    component: StartComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: redirectUnauthorizedToLogin },\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { config } from './../assets/env';\r\nimport { TemplateService } from './services/template.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(public router: Router, private tserv: TemplateService) {}\r\n  navHidden: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.subscribe((url) => {\r\n      this.navHidden = this.router.url === '/login' ? true : false;\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-container\">\n  <app-navbar *ngIf=\"!navHidden\"></app-navbar>\n  <div class=\"content-container\"><router-outlet></router-outlet></div>\n</div>\n","import { ConstantService } from './services/constant.service';\nimport { ReportService } from 'src/app/services/report.service';\nimport { config } from './../assets/env';\nimport { TemplateService } from './services/template.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule, ClrDropdown } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './components/start/start.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ReportComponent } from './components/report/report.component';\nimport { AbstractSection } from './components/sections/abstract-section/abstract-section.component';\nimport { DatagridSection } from './components/sections/datagrid-section/datagrid-section.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DivisionSelectComponent } from './components/controls/division-select/division-select.component';\nimport { SimpleInputSection } from './components/sections/simple-input/simple-input.component';\nimport { MonthSelectComponent } from './components/controls/month-select/month-select.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { UserService } from './services/user.service';\nimport { PreferencesComponent } from './components/preferences/preferences.component';\nimport { BuilderComponent } from './components/builder/builder.component';\nimport { ClipboardModule } from 'ngx-clipboard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    LoginComponent,\n    NavbarComponent,\n    ReportComponent,\n    AbstractSection,\n    DatagridSection,\n    DivisionSelectComponent,\n    SimpleInputSection,\n    MonthSelectComponent,\n    PreferencesComponent,\n    BuilderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ClipboardModule,\n    AngularFireModule.initializeApp(config.firebase),\n  ],\n  providers: [TemplateService, UserService, ConstantService, ReportService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { UserService } from './../../services/user.service';\nimport { ClrLoadingState } from '@clr/angular';\nimport { TemplateService } from './../../services/template.service';\nimport { ConstantService } from './../../services/constant.service';\nimport {\n  SimpleInputInterface,\n  DatagridInterface,\n  SectionInterface,\n  Input,\n  Column,\n} from './../../interfaces/sections';\nimport { Report } from 'src/app/interfaces/report';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UnifiedReport } from './../../interfaces/report';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormArray,\n  AbstractControl,\n} from '@angular/forms';\nimport {\n  Component,\n  OnInit,\n  NgModule,\n  CUSTOM_ELEMENTS_SCHEMA,\n} from '@angular/core';\nimport { Page } from 'src/app/interfaces/page';\nimport { first } from 'rxjs/operators';\nimport 'emoji-picker-element';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.css'],\n})\nexport class BuilderComponent implements OnInit {\n  _template: UnifiedReport;\n\n  tempPropsGroup: FormGroup;\n  pageExpansions: boolean[];\n  pageHovers: boolean[];\n  sectionHovers: boolean[][];\n  iconNames: string[];\n  editSectionOpened: boolean = false;\n  editPageOpened: boolean = false;\n  saveTemplateOpen: boolean = false;\n  emojiPickerOpened: boolean = false;\n  originalTemplateName: string;\n  saveLoadingStatus: ClrLoadingState = ClrLoadingState.DEFAULT;\n  // sectionPropsForm: FormGroup = new FormGroup({\n  //   title: new FormControl(),\n  //   subtitle: new FormControl(),\n  //   type: new FormControl(),\n  //   columns: new FormControl(),\n  //   inputs: new FormControl(),\n  //   tags: new FormControl(),\n  // });\n  inputsForm: FormGroup = new FormGroup({\n    array: new FormArray([]),\n  });\n  columnsForm: FormGroup = new FormGroup({\n    array: new FormArray([]),\n  });\n\n  currentPage: Page;\n  originalSectionIndex: number;\n  sectionInEdit: Object;\n  validMessage: string;\n  constants$: Observable<Object>;\n  divisions: Object[];\n  metaSection: SimpleInputInterface;\n\n  constructor(\n    public _ActivatedRoute: ActivatedRoute,\n    public _AngularFirestore: AngularFirestore,\n    public _ConstantService: ConstantService,\n    public _TS: TemplateService,\n    public _UserService: UserService,\n    public _Router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.constants$ = this._ConstantService.constants;\n    this._UserService.getUserObservable().subscribe((user) => {\n      console.log(user);\n      if (user && user.role !== 'admin') {\n        console.error('The Builder is for admins only. Redirecting home.');\n        this._Router.navigate(['']);\n      }\n    });\n    this._ActivatedRoute.queryParamMap.subscribe((paramMap) => {\n      let openTitle = paramMap.get('open');\n      //if an existing template has been passed to the URL\n      if (openTitle) {\n        this.openTemplate(openTitle)\n          .then(() => {\n            this.originalTemplateName = this._template.templateID;\n            console.log(this._template);\n          })\n          .catch(() => {});\n      } else {\n        this._template = {\n          id: null,\n          templateID: '',\n          pageStatuses: [],\n          pageCount: 0,\n          completionStatus: 'incomplete',\n          pages: [],\n        };\n        this.templateChanged();\n      }\n    });\n    this.tempPropsGroup = new FormGroup({\n      templateTitle: new FormControl(''),\n    });\n\n    this.tempPropsGroup.valueChanges.subscribe(() => {\n      this.setTemplateTitle(this.tempPropsGroup.get('templateTitle').value);\n    });\n    // this.pushTemplateObjectToDB(outlineReport, outlinePages);\n  }\n\n  openTemplate(templateID: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      console.log('[Builder] Opening ' + templateID + '...');\n      let templateDoc = this._AngularFirestore.doc<Report>(\n        '/templates/' + templateID\n      );\n\n      templateDoc\n        .get()\n        .pipe(first())\n        .subscribe((docSnapshot) => {\n          if (docSnapshot.exists) {\n            let templateHeader: Report = docSnapshot.data() as Report;\n            let promises: Promise<void>[] = [];\n            //get all pages stored in subcollection\n            let templatePages: Page[] = [];\n            for (let i = 0; i < templateHeader.pageCount; i++) {\n              promises.push(\n                new Promise<void>((resolve, reject) => {\n                  let pageDoc = templateDoc\n                    .collection('pages')\n                    .doc<Page>(i.toString());\n                  pageDoc\n                    .valueChanges()\n                    .pipe(first())\n                    .subscribe((page) => {\n                      templatePages.push(page);\n                      resolve();\n                    }, reject);\n                })\n              );\n            }\n            Promise.all(promises).then(\n              () => {\n                this._template = {\n                  id: null,\n                  templateID: templateHeader.templateID,\n                  pageStatuses: templateHeader.pageStatuses,\n                  pageCount: templateHeader.pageCount,\n                  completionStatus: templateHeader.completionStatus,\n                  pages: templatePages,\n                };\n                this.templateChanged();\n                resolve();\n              },\n              () => {\n                reject();\n              }\n            );\n          } else {\n            console.warn(\n              'Template ' +\n                templateID +\n                ' does not exist. Setting to empty template instead.'\n            );\n            this._TS.newTemplate();\n            reject();\n          }\n        }, reject);\n    });\n  }\n\n  pushTemplateObjectToDB(template: Report, pages: Page[]) {\n    let templateDoc = this._AngularFirestore.doc(\n      '/templates/' + template.templateID\n    );\n    templateDoc\n      .set(template)\n      .then(() => {\n        let pageCollection = templateDoc.collection('pages');\n        pages.forEach((page, index) => {\n          console.log(page);\n          pageCollection.doc(index.toString()).set(page);\n        });\n      })\n      .catch((reason) => {\n        console.log(reason);\n      })\n      .finally(() =>\n        console.log('Template ' + template.templateID + ' pushed')\n      );\n  }\n\n  setTemplateTitle(newTitle) {\n    if (this._template) {\n      this._template.title = newTitle;\n      console.log('[Builder] Template title is now ' + newTitle);\n    }\n  }\n\n  get hasMetaSection(): boolean {\n    let hasMeta = false;\n    this._template.pages.forEach((page) => {\n      page.sections.forEach((section) => {\n        if (section['type'] === 'meta') {\n          this.metaSection = section as SimpleInputInterface;\n          hasMeta = true;\n        }\n      });\n    });\n    return hasMeta;\n  }\n\n  templateChanged() {\n    this.updateSidebar();\n  }\n\n  updateSidebar() {\n    if (this._template) {\n      this.pageExpansions = [];\n      this.pageHovers = [];\n      this.sectionHovers = [[]];\n      this._template.pages.forEach((page, index) => {\n        this.pageExpansions.push(false);\n        this.pageHovers.push(false);\n        let sections: boolean[] = [];\n        page.sections.forEach(() => {\n          sections.push(false);\n        });\n        this.sectionHovers.push(sections);\n      });\n      console.log(this.sectionHovers);\n    }\n  }\n\n  addPage() {\n    this._template.pages.push({\n      title: 'Untitled page',\n      index: this._template.pages.length,\n      sections: [],\n    });\n    if (!this._template.pageStatuses) {\n      this._template.pageStatuses = [];\n    }\n    this._template.pageStatuses.push('incomplete');\n    this._template.pageCount++;\n    console.log(this._template.pages.length);\n  }\n\n  setCurrentPage(index: number) {\n    this.currentPage = this._template.pages[index];\n  }\n\n  get templateValid() {\n    if (!this._template) {\n      this.validMessage = 'Template is missing.';\n      return false;\n    } else if (\n      !this._template.templateID ||\n      this._template.templateID.length < 1\n    ) {\n      this.validMessage = 'Template title is missing.';\n      return false;\n    } else {\n      this.validMessage = 'Ready to save.';\n      return true;\n    }\n  }\n\n  get pagesEmpty() {\n    if (\n      !this._template ||\n      !this._template.pages ||\n      this._template.pages.length < 1\n    ) {\n      return true;\n    } else return false;\n  }\n\n  isDatagrid(section: Object) {\n    if (!section || section['type'] !== 'datagrid') {\n      return false;\n    } else return true;\n  }\n  isSimpleInput(section: Object) {\n    if (!section || section['type'] !== 'simple-input') {\n      return false;\n    } else return true;\n  }\n  hasInputs(section: Object) {\n    if (\n      !section ||\n      section['type'] !== 'simple-input' ||\n      !section['inputs'] ||\n      section['inputs'].length < 1\n    ) {\n      return false;\n    } else return true;\n  }\n\n  getDatagrids(pageIndex) {\n    let datagrids: Object[] = [];\n    if (this._template && this._template.pages) {\n      this._template.pages[pageIndex].sections.forEach((section) => {\n        if (section['type'] === 'datagrid') {\n          datagrids.push(section);\n        }\n      });\n    }\n    return datagrids;\n  }\n\n  addDatagrid(pageIndex) {\n    if (this._template && this._template.pages) {\n      let newSection: DatagridInterface = {\n        title: 'Untitled',\n        columns: [],\n        value: [],\n        type: 'datagrid',\n        index: this._template.pages[pageIndex].sections.length,\n      };\n      this._template.pages[pageIndex].sections.push(newSection);\n      console.log(\n        'Datagrid added. Sections now: ' +\n          this._template.pages[pageIndex].sections\n      );\n    }\n  }\n\n  getMagicText(): string {\n    if (!this._template) {\n      return 'No template open';\n    }\n    return JSON.stringify(this._template, null, 4);\n  }\n\n  getSectionsByType(pageIndex: number, type: string) {\n    let sections: Object[] = [];\n    let page = this._template.pages[pageIndex] as Page;\n    page.sections.forEach((section) => {\n      if (section['type'] === type) {\n        sections.push(section);\n      }\n    });\n    return sections;\n  }\n\n  addMetaSection(pageIndex) {\n    if (this._template && this._template.pages) {\n      let newSection: SimpleInputInterface = {\n        title: 'Untitled',\n        inputs: [],\n        value: [],\n        type: 'meta',\n        index: this._template.pages[pageIndex].sections.length,\n      };\n      this._template.pages[pageIndex].sections.push(newSection);\n      this.metaSection = newSection;\n      console.log(\n        'Meta added. Sections now: ' + this._template.pages[pageIndex].sections\n      );\n    }\n  }\n\n  getSimpleInputs(pageIndex) {\n    let simpleInputs: Object[] = [];\n    if (this._template && this._template.pages) {\n      this._template.pages[pageIndex].sections.forEach((section) => {\n        if (section['type'] === 'simple-input') {\n          simpleInputs.push(section);\n        }\n      });\n    }\n    return simpleInputs;\n  }\n\n  addSimpleInput(pageIndex) {\n    if (this._template && this._template.pages) {\n      let newSection: SimpleInputInterface = {\n        title: 'Untitled',\n        inputs: [],\n        value: [],\n        type: 'simple-input',\n        index: this._template.pages[pageIndex].sections.length,\n      };\n      this._template.pages[pageIndex].sections.push(newSection);\n      console.log(\n        'SimpleInput added. Sections now: ' +\n          this._template.pages[pageIndex].sections\n      );\n    }\n  }\n\n  sectionTypeChanged(section) {\n    if (section.type === 'simple-input') {\n      if (!section['inputs']) {\n        section['inputs'] = [];\n      }\n    } else if (section.type === 'datagrid') {\n      if (!section['columns']) {\n        section['columns'] = [];\n      }\n    } else {\n      console.error('New section type unrecognized: ' + section.type);\n    }\n  }\n\n  setSection(section: Object, data: Object) {}\n  cancelEditSection() {\n    this.editSectionOpened = false;\n  }\n\n  openSaveTemplate() {\n    this.saveTemplateOpen = true;\n  }\n\n  cancelSaveTemplate() {\n    this.saveTemplateOpen = false;\n  }\n\n  openEditSection(section: Object) {\n    //deep copy the section\n    this.sectionInEdit = JSON.parse(JSON.stringify(section));\n\n    this.originalSectionIndex = this.sectionInEdit['index'];\n    this.editSectionOpened = true;\n  }\n\n  openEditPage(page: Page) {\n    this.editPageOpened = true;\n    console.log('Opening page');\n  }\n  closeEditPage() {\n    this.editPageOpened = false;\n  }\n  movePageUp() {\n    let currentIndex = this.currentPage.index;\n    this.movePage(currentIndex, currentIndex - 1);\n    this.resetPageIndices();\n  }\n  movePageDown() {\n    let currentIndex = this.currentPage.index;\n    this.movePage(currentIndex, currentIndex + 1);\n    this.resetPageIndices();\n  }\n  movePage(fromIndex: number, toIndex: number) {\n    console.log('Moving to ' + toIndex);\n    if (toIndex >= 0 && toIndex < this._template.pages.length) {\n      let arr = this._template.pages;\n      arr.splice(toIndex, 0, arr.splice(fromIndex, 1)[0]);\n    } else console.error(\"Can't move page. Out of bounds.\");\n  }\n  moveInArray(fromIndex: number, toIndex: number, array: any[]) {\n    console.log('Moving to ' + toIndex);\n    if (toIndex >= 0 && toIndex < array.length) {\n      array.splice(toIndex, 0, array.splice(fromIndex, 1)[0]);\n    } else console.error(\"Can't move page. Out of bounds.\");\n  }\n  deleteInArray(index: number, array: any[]) {\n    if (index >= 0 && index < array.length) {\n      array.splice(index, 1);\n    } else console.error(\"Can't delete element. Out of bounds.\");\n  }\n\n  linkChanged(input: Input, event) {\n    console.log('Link changed');\n\n    if (input.link === 'title') {\n      input.type = 'text';\n    } else if (input.link === 'coverageDate') {\n      input.type = 'month-select';\n    } else if (input.link === 'additionalInfo') {\n      input.type = 'textarea';\n    } else if (input.link === 'subject') {\n      input.type = 'text';\n    } else if (input.link === 'tags') {\n      input.type = 'tag-select';\n      if (!input.tags) {\n        input['tags'] = [];\n      }\n    }\n    this.refreshValueFromFields();\n  }\n\n  resetPageIndices() {\n    this._template.pages.forEach((page, index) => {\n      page.index = index;\n    });\n  }\n\n  resetSectionIndices() {\n    this.currentPage.sections.forEach((section: SectionInterface, index) => {\n      section.index = index;\n    });\n  }\n\n  finishEditSection() {\n    console.log(this.sectionInEdit);\n    this.moveSection(this.originalSectionIndex, this.sectionInEdit['index']);\n    this._template['pages'][this.currentPage.index]['sections'][\n      this.sectionInEdit['index']\n    ] = this.sectionInEdit;\n    //now reevaluate the 'index' section properties\n    this.currentPage.sections.forEach((section, index) => {\n      section['index'] = index;\n    });\n\n    //we reload the preview area after each successful push\n    let refreshTemp = this.currentPage;\n\n    this.editSectionOpened = false;\n  }\n\n  finishEditPage() {\n    this.editPageOpened = false;\n  }\n\n  isDatatype(colIndex: number, type: string) {\n    if (\n      this.sectionInEdit['columns'] &&\n      this.sectionInEdit['columns'][colIndex]['type'] === type\n    ) {\n      return true;\n    }\n    if (\n      this.sectionInEdit['inputs'] &&\n      this.sectionInEdit['inputs'][colIndex]['type'] === type\n    ) {\n      return true;\n    } else return false;\n  }\n\n  isEqual(a, b) {\n    return a === b;\n  }\n\n  isSectionType(section, type) {\n    if (!section) {\n      return false;\n    }\n    return section['type'] === type;\n  }\n  isPlainDt(colIndex: number) {\n    let type = this.sectionInEdit['columns'][colIndex]['type'];\n    if (\n      !(\n        type === 'tag-select' ||\n        type === 'date-select' ||\n        type === 'month-select'\n      )\n    ) {\n      return true;\n    } else return false;\n  }\n\n  get tag() {\n    return 'Hello';\n  }\n\n  toggleTag(rowIndex, colIndex, toggled: boolean, tag) {\n    let cellTags: Object[] = this.sectionInEdit['value'][rowIndex]['row'][\n      colIndex\n    ]['tags'];\n    if (toggled === true) {\n      //add the tag to the section value\n      cellTags.push(tag);\n    } else {\n      //remove the tag\n      cellTags.forEach((tagJ, index) => {\n        if (tag['label'] === tagJ['label']) {\n          cellTags.splice(index, 1);\n        }\n      });\n    }\n    console.log(this.sectionInEdit);\n  }\n\n  renderDgCell(rowIndex: number, colIndex: number) {\n    let cellVal = this.sectionInEdit['value'][rowIndex]['row'][colIndex];\n    let type = this.sectionInEdit['columns'][colIndex]['type'];\n    if (type === 'tag-select') {\n      let emojis: string = '';\n      (cellVal['tags'] as Object[]).forEach((tagObj) => {\n        emojis = emojis + ' ' + tagObj['icon'];\n      });\n      return emojis;\n    } else {\n      return cellVal;\n    }\n  }\n\n  // Array.prototype.move = function(from, to) {\n  //   this.splice(to, 0, this.splice(from, 1)[0]);\n  // };\n\n  moveSection(fromIndex: number, toIndex: number) {\n    console.log('Moving to ' + toIndex);\n    if (toIndex >= 0 && toIndex < this.currentPage.sections.length) {\n      let arr = this.currentPage.sections;\n      arr.splice(toIndex, 0, arr.splice(fromIndex, 1)[0]);\n    } else console.error(\"Can't move section. Out of bounds.\");\n  }\n\n  addColumn(event: Event) {\n    event.stopPropagation();\n    if (!this.sectionInEdit['columns']) {\n      this.sectionInEdit['columns'] = [{ label: 'New column', type: 'text' }];\n    } else {\n      (this.sectionInEdit['columns'] as Object[]).push({\n        label: 'New column',\n        type: 'text',\n        tags: [],\n      });\n      //push an empty column to each row\n      (this.sectionInEdit['value'] as Object[]).forEach((row) => {\n        (row['row'] as Object[]).push('');\n      });\n    }\n  }\n\n  clearPrefill() {\n    if (this.sectionInEdit['value']) {\n      this.sectionInEdit['value'] = [];\n    }\n  }\n\n  deleteColumn(index: number) {\n    //if prefill exists, clear it\n    this.clearPrefill();\n    console.log(this.sectionInEdit['columns']);\n    (this.sectionInEdit['columns'] as Object[]).splice(index, 1);\n    console.log(this.sectionInEdit['columns']);\n  }\n  deleteInput(index: number) {\n    this.clearPrefill();\n    (this.sectionInEdit['inputs'] as Object[]).splice(index, 1);\n  }\n  deleteSection(section) {\n    if (\n      confirm('Are you sure you want to delete \"' + section['title'] + '\"?')\n    ) {\n      this.currentPage.sections.splice(section['index'], 1);\n      this.resetSectionIndices();\n      console.log('Section @ ' + section['index'] + ' deleted.');\n      this.cancelEditSection();\n    }\n  }\n  deletePage(pageIndex) {\n    if (\n      confirm(\n        'Delete page ' +\n          (pageIndex + 1) +\n          ' (' +\n          this._template.pages[pageIndex].title +\n          ')?'\n      )\n    ) {\n      //close the current page if it's being deleted\n      if (this.currentPage.index === pageIndex) {\n        this.currentPage = null;\n      }\n      this._template.pages.splice(pageIndex, 1);\n      this._template.pageCount--;\n      this.closeEditPage();\n    }\n  }\n\n  addInput(event: Event) {\n    event.stopPropagation();\n    let inputs = this.sectionInEdit['inputs'] as Object[];\n    if (!inputs) {\n      inputs = [];\n    }\n    if (this.sectionInEdit['type'] === 'meta') {\n      inputs.push({\n        label: 'Untitled',\n        type: 'month-select',\n        link: 'coverageDate', //default link\n        tags: [],\n      });\n    } else {\n      inputs.push({\n        label: 'Untitled',\n        type: 'text',\n        link: null, //default link\n        tags: [],\n      });\n    }\n    this.refreshValueFromFields();\n  }\n\n  hoverEnterPageSB(pageIndex) {\n    this.pageHovers[pageIndex] = true;\n  }\n  hoverLeavePageSB(pageIndex) {\n    this.pageHovers[pageIndex] = false;\n  }\n\n  hasTagSelect(object: Object): boolean {\n    let hastag: boolean = false;\n    if (object['inputs']) {\n      (object['inputs'] as Object[]).forEach((input) => {\n        if (input['type'] === 'tag-select') {\n          hastag = true;\n        }\n      });\n    } else if (object['columns']) {\n      (object['columns'] as Object[]).forEach((col) => {\n        if (col['type'] === 'tag-select') {\n          hastag = true;\n        }\n      });\n    }\n    return hastag;\n  }\n\n  hasTag(rowIndex: number, colIndex: number, tag: Object) {\n    let cellTags: Object[] = this.sectionInEdit['value'][rowIndex]['row'][\n      colIndex\n    ]['tags'];\n    let cellIcons: string[] = [];\n    cellTags.forEach((tag) => {\n      cellIcons.push(tag['icon']);\n    });\n\n    let searchIcon = tag['icon'];\n    return cellIcons.includes(searchIcon);\n  }\n\n  hasPrefill(object: Object): boolean {\n    if (object['value'] && (object['value'] as Object[]).length > 0) {\n      return true;\n    } else return false;\n  }\n\n  addTag(field: Object, event: Event) {\n    event.stopPropagation();\n    console.log(field);\n    if (!field['tags']) {\n      field['tags'] = [];\n    }\n    field['tags'].push({\n      icon: '❓',\n      label: 'Untitled',\n    });\n    console.log(field);\n    this.refreshValueFromFields();\n  }\n\n  refreshValueFromFields() {\n    let value = [];\n    if (this.sectionInEdit['inputs']) {\n      this.sectionInEdit['inputs'].forEach((input: Input) => {\n        if (input.type === 'tag-select') {\n          value.push({ tags: [] });\n        } else value.push(null);\n      });\n      this.sectionInEdit['value'] = value;\n      console.log('Value refreshed: ');\n      console.log(this.sectionInEdit['value']);\n    } else if (this.sectionInEdit['columns']) {\n      this.sectionInEdit['columns'].forEach((col: Column) => {\n        if (col.type === 'tag-select') {\n          value.push({ tags: [] });\n        } else value.push(null);\n      });\n      this.sectionInEdit['value'] = [{ row: value }];\n      console.log('Value refreshed: ');\n      console.log(this.sectionInEdit['value']);\n    } else {\n      console.error(\n        'Could not refresh value from fields: no columns or inputs were found.'\n      );\n    }\n  }\n\n  typeChanged(field: Object, event: Event) {\n    this.refreshValueFromFields();\n    console.log(this.sectionInEdit);\n  }\n\n  deleteTag(input: Input, index: number) {\n    console.log(input.tags.splice(index, 1));\n  }\n\n  editTagEmoji(field: Object, tagIndex: number, eventData: CustomEvent) {\n    console.log(tagIndex, eventData.detail);\n    field['tags'][tagIndex]['icon'] = eventData.detail['unicode'];\n    console.log(this.sectionInEdit);\n  }\n\n  saveTemplate() {\n    this.saveLoadingStatus = ClrLoadingState.LOADING;\n    this._TS\n      .saveTemplate(this._template)\n      .then(() => {\n        this.saveLoadingStatus = ClrLoadingState.SUCCESS;\n        setTimeout(() => {\n          this.saveTemplateOpen = false;\n        }, 500);\n        this._TS.openTemplate(this._template.templateID);\n      })\n      .catch((reason) => {\n        console.error('Save failed: ' + reason);\n        alert('Save failed: ' + reason);\n        this.saveLoadingStatus = ClrLoadingState.ERROR;\n      });\n  }\n}\n","<div\n  class=\"clr-row clr-justify-content-between\"\n  style=\"width: 100vw; overflow: hidden;\"\n>\n  <div\n    class=\"clr-col-3 builder-sidebar\"\n    style=\"\n      box-shadow: 0px 10px 18px #c7c6c6;\n      margin-left: 10px;\n      overflow-y: auto;\n    \"\n  >\n    <div class=\"clr-row\" style=\"margin: 1rem 0 1rem 0;\">\n      <clr-input-container style=\"margin-top: 3rem;\">\n        <input\n          class=\"templateTitle\"\n          clrInput\n          placeholder=\"Untitled template\"\n          name=\"name\"\n          *ngIf=\"_template\"\n          [(ngModel)]=\"_template.templateID\"\n        />\n        <clr-control-helper>Template title</clr-control-helper>\n      </clr-input-container>\n    </div>\n\n    <span class=\"clr-row\" *ngIf=\"pagesEmpty\"\n      ><clr-icon shape=\"help-info\"></clr-icon><em>No pages yet.</em>\n    </span>\n    <div class=\"clr-row\" *ngIf=\"_template\">\n      <clr-tree>\n        <clr-tree-node *ngIf=\"_template.pages\">\n          <h4 style=\"margin: 0;\">Overview</h4>\n          <clr-tooltip>\n            <clr-icon\n              clrTooltipTrigger\n              shape=\"help-info\"\n              size=\"16\"\n              aria-label=\"Uniq tooltip 3\"\n            ></clr-icon>\n            <clr-tooltip-content\n              clrPosition=\"bottom-right\"\n              clrSize=\"md\"\n              *clrIfOpen\n            >\n              <span\n                >Double click on a page or section below to open the properties\n                pane. Use the \"+\" buttons to add content.</span\n              >\n            </clr-tooltip-content>\n          </clr-tooltip>\n          <button\n            class=\"btn btn-sm btn-link btn-icon\"\n            title=\"Add page\"\n            (click)=\"addPage()\"\n          >\n            <clr-icon shape=\"plus\"></clr-icon>\n          </button>\n        </clr-tree-node>\n        <clr-tree-node\n          *ngFor=\"let page of _template.pages; index as i\"\n          [(clrExpanded)]=\"pageExpansions[i]\"\n          (click)=\"setCurrentPage(i)\"\n        >\n          <div class=\"tree-text clr-row\" (dblclick)=\"openEditPage(i)\">\n            <div><clr-icon shape=\"file\"></clr-icon> {{ page.title }}</div>\n          </div>\n          <clr-tree-node>\n            <p class=\"p4\" style=\"margin: 0;\"></p>\n            <button\n              class=\"btn btn-sm btn-link\"\n              title=\"Add Meta Section\"\n              (click)=\"addMetaSection(i)\"\n              *ngIf=\"!hasMetaSection\"\n            >\n              Add Meta Section\n              <clr-icon shape=\"plus\"></clr-icon>\n            </button>\n          </clr-tree-node>\n          <clr-tree-node\n            *ngFor=\"let section of getSectionsByType(i, 'meta')\"\n            style=\"width: 100%;\"\n            (dblclick)=\"openEditSection(section)\"\n          >\n            <div class=\"tree-text\">\n              {{ section.title\n              }}<clr-icon\n                shape=\"flag\"\n                class=\"is-solid is-error\"\n                title=\"Meta section\"\n              ></clr-icon>\n            </div>\n          </clr-tree-node>\n          <clr-tree-node>\n            <p class=\"p4\" style=\"margin: 0;\">Datagrids</p>\n            <button\n              class=\"btn btn-sm btn-link btn-icon\"\n              title=\"Add Datagrid\"\n              (click)=\"addDatagrid(i)\"\n            >\n              <clr-icon shape=\"plus\"></clr-icon>\n            </button>\n          </clr-tree-node>\n\n          <clr-tree-node\n            *ngFor=\"let section of getDatagrids(i)\"\n            style=\"width: 100%;\"\n            (dblclick)=\"openEditSection(section)\"\n          >\n            <clr-icon shape=\"table\"></clr-icon>\n            <div class=\"tree-text\">{{ section.title }}</div>\n          </clr-tree-node>\n          <clr-tree-node>\n            <p class=\"p4\" style=\"margin: 0;\">SimpleInputs</p>\n            <button\n              class=\"btn btn-sm btn-link btn-icon\"\n              title=\"Add Datagrid\"\n              (click)=\"addSimpleInput(i)\"\n            >\n              <clr-icon shape=\"plus\"></clr-icon>\n            </button>\n          </clr-tree-node>\n          <clr-tree-node\n            *ngFor=\"let section of getSimpleInputs(i)\"\n            style=\"width: 100%;\"\n            (dblclick)=\"openEditSection(section)\"\n          >\n            <clr-icon shape=\"form\"></clr-icon>\n            <div class=\"tree-text\">\n              {{ section.title }}\n            </div>\n          </clr-tree-node>\n        </clr-tree-node>\n      </clr-tree>\n    </div>\n  </div>\n  <div class=\"clr-col preview-area\" *ngIf=\"currentPage\">\n    <div class=\"clr-row\">\n      <div class=\"clr-col-1 clr-align-self-center\" style=\"padding: 0;\">\n        <div class=\"clr-row clr-justify-content-end clr-align-items-end\">\n          <button\n            class=\"btn btn-link btn-icon\"\n            style=\"margin-right: 1rem;\"\n            (click)=\"openEditPage(currentPage)\"\n          >\n            <clr-icon shape=\"pencil\" style=\"color: black;\"></clr-icon>\n          </button>\n        </div>\n      </div>\n      <div class=\"clr-col-11\" style=\"padding: 0;\">\n        <h1>{{ currentPage.title }}</h1>\n      </div>\n    </div>\n    <hr />\n\n    <div class=\"clr-row\" *ngFor=\"let section of currentPage.sections\">\n      <div class=\"clr-col-1 clr-align-self-center\" style=\"padding: 0;\">\n        <div class=\"clr-row clr-justify-content-end\">\n          <button\n            class=\"btn btn-link btn-icon\"\n            style=\"margin-right: 1rem;\"\n            (click)=\"openEditSection(section)\"\n          >\n            <clr-icon shape=\"pencil\" style=\"color: black;\"></clr-icon>\n          </button>\n        </div>\n      </div>\n      <div class=\"clr-col-11\" style=\"padding: 0;\">\n        <datagrid-section\n          *ngIf=\"isDatagrid(section); else simpleInput\"\n          [interface]=\"section\"\n          (sectionChanged)=\"setSection(section, $event)\"\n          class=\"grayout\"\n        >\n        </datagrid-section>\n        <ng-template #simpleInput>\n          <simple-input\n            [interface]=\"section\"\n            (sectionChanged)=\"setSection(section, $event)\"\n            class=\"grayout\"\n          ></simple-input>\n        </ng-template>\n        <div></div>\n      </div>\n    </div>\n\n    <clr-modal [(clrModalOpen)]=\"editSectionOpened\" [clrModalSize]=\"'xl'\">\n      <h3 class=\"modal-title\">Section properties</h3>\n      <div class=\"modal-body\" style=\"overflow: auto;\">\n        <clr-tabs>\n          <clr-tab>\n            <button clrTabLink id=\"link1\">Properties</button>\n            <clr-tab-content id=\"content1\" *clrIfActive>\n              <clr-stack-view>\n                <clr-stack-block>\n                  <clr-stack-label>Title</clr-stack-label>\n                  <clr-stack-content>\n                    <input\n                      type=\"text\"\n                      [(ngModel)]=\"sectionInEdit['title']\"\n                      class=\"clr-input\"\n                    />\n                  </clr-stack-content>\n                </clr-stack-block>\n                <clr-stack-block>\n                  <clr-stack-label>Subtitle (optional)</clr-stack-label>\n                  <clr-stack-content>\n                    <input\n                      type=\"text\"\n                      [(ngModel)]=\"sectionInEdit['subtitle']\"\n                      class=\"clr-input\"\n                    />\n                  </clr-stack-content>\n                </clr-stack-block>\n                <clr-stack-block>\n                  <clr-stack-label\n                    >Type<clr-tooltip>\n                      <clr-icon\n                        clrTooltipTrigger\n                        shape=\"help-info\"\n                        size=\"16\"\n                      ></clr-icon>\n                      <clr-tooltip-content\n                        clrPosition=\"right\"\n                        clrSize=\"lg\"\n                        *clrIfOpen\n                      >\n                        <span\n                          ><em>Datagrids</em> are tables, good for lots of\n                          data.<br /><em>SimpleInputs</em> are basic forms, good\n                          for a few questions.<br /><em>Meta sections</em> are\n                          SimpleInputs that link to properties in the report--\n                          i.e. coverage date.</span\n                        >\n                      </clr-tooltip-content>\n                    </clr-tooltip></clr-stack-label\n                  >\n                  <clr-stack-content>\n                    <select\n                      [(ngModel)]=\"sectionInEdit['type']\"\n                      (ngModelChange)=\"sectionTypeChanged(sectionInEdit)\"\n                      class=\"clr-select\"\n                    >\n                      <option value=\"datagrid\">Datagrid</option>\n                      <option value=\"simple-input\">SimpleInput</option>\n                      <option value=\"meta\">Meta</option>\n                    </select>\n                  </clr-stack-content>\n                </clr-stack-block>\n                <clr-stack-block>\n                  <clr-stack-label>Order</clr-stack-label>\n                  <clr-stack-content>\n                    <button\n                      class=\"btn btn-link btn-sm\"\n                      title=\"Move up\"\n                      (click)=\"\n                        sectionInEdit['index'] = sectionInEdit['index'] - 1\n                      \"\n                      [disabled]=\"sectionInEdit['index'] < 1\"\n                      style=\"margin: 0;\"\n                    >\n                      <clr-icon shape=\"angle\" dir=\"up\"></clr-icon>\n                    </button>\n                    {{ sectionInEdit[\"index\"] + 1 }}/{{\n                      currentPage.sections.length\n                    }}\n                    <button\n                      class=\"btn btn-link btn-sm\"\n                      title=\"Move down\"\n                      style=\"margin: 0;\"\n                      (click)=\"\n                        sectionInEdit['index'] = sectionInEdit['index'] + 1\n                      \"\n                      [disabled]=\"\n                        sectionInEdit['index'] > currentPage.sections.length - 2\n                      \"\n                    >\n                      <clr-icon shape=\"angle\" dir=\"down\"></clr-icon>\n                    </button>\n                  </clr-stack-content>\n                </clr-stack-block>\n                <clr-stack-block *ngIf=\"isDatagrid(sectionInEdit)\">\n                  <clr-stack-label>\n                    Columns\n                    <clr-tooltip *ngIf=\"hasPrefill(sectionInEdit)\">\n                      <clr-icon\n                        clrTooltipTrigger\n                        shape=\"warning-standard\"\n                        class=\"is-warning is-solid\"\n                        size=\"16\"\n                      ></clr-icon>\n                      <clr-tooltip-content\n                        clrPosition=\"top-right\"\n                        clrSize=\"md\"\n                        *clrIfOpen\n                      >\n                        <span\n                          >Modifying this section might\n                          <b>clear existing prefill</b>.</span\n                        >\n                      </clr-tooltip-content>\n                    </clr-tooltip>\n                  </clr-stack-label>\n                  <clr-stack-content>\n                    <span *ngIf=\"sectionInEdit['columns']\"\n                      >{{ sectionInEdit[\"columns\"].length }} columns</span\n                    >\n                    <button\n                      class=\"btn btn-sm btn-link btn-icon\"\n                      title=\"Add column\"\n                      (click)=\"addColumn($event)\"\n                      style=\"margin: 0;\"\n                    >\n                      <clr-icon shape=\"plus\"></clr-icon>\n                    </button>\n                  </clr-stack-content>\n                  <clr-stack-block\n                    *ngFor=\"let col of sectionInEdit['columns']; index as i\"\n                  >\n                    <clr-stack-label\n                      >Column {{ i + 1 }}\n                      <button\n                        class=\"btn btn-sm btn-link btn-icon\"\n                        (click)=\"deleteColumn(i)\"\n                      >\n                        <clr-icon shape=\"trash\"></clr-icon>\n                      </button>\n                    </clr-stack-label>\n                    <clr-stack-content>\n                      <input\n                        type=\"text\"\n                        [(ngModel)]=\"sectionInEdit['columns'][i]['label']\"\n                        class=\"clr-input\"\n                        placeholder=\"Label\"\n                      />\n                      <select\n                        [(ngModel)]=\"sectionInEdit['columns'][i]['type']\"\n                        (ngModelChange)=\"typeChanged(col, $event)\"\n                        class=\"clr-select\"\n                      >\n                        <option value=\"division-select\">Division Select</option>\n                        <option value=\"text\">Text</option>\n                        <option value=\"number\">Number</option>\n                        <option value=\"date-select\">Date</option>\n                        <option value=\"tag-select\">Tag Select</option>\n                      </select>\n                      <div\n                        class=\"clr-col\"\n                        *ngIf=\"isEqual(col['type'], 'tag-select')\"\n                      >\n                        <div class=\"clr-row\">\n                          <label class=\"clr-control-label\">Tags</label>\n                        </div>\n                        <clr-accordion>\n                          <clr-accordion-panel\n                            *ngFor=\"let tag of col['tags']; index as i\"\n                          >\n                            <clr-accordion-title\n                              >{{ tag[\"icon\"] }}\n                              {{ tag[\"label\"] }}\n                              <button\n                                class=\"btn btn-link btn-sm btn-icon\"\n                                (click)=\"deleteTag(col, i)\"\n                                style=\"margin: 0;\"\n                              >\n                                <clr-icon\n                                  shape=\"trash\"\n                                  class=\"is-danger\"\n                                ></clr-icon>\n                              </button>\n                            </clr-accordion-title>\n                            <clr-accordion-content\n                              *clrIfExpanded\n                              class=\"tagAccordion\"\n                            >\n                              <label class=\"clr-control-label\">Tag label</label>\n                              <input clrInput [(ngModel)]=\"tag['label']\" />\n                              <label class=\"clr-control-label\">Tag icon</label>\n                              <emoji-picker\n                                (emoji-click)=\"editTagEmoji(col, i, $event)\"\n                              ></emoji-picker>\n                            </clr-accordion-content>\n                          </clr-accordion-panel>\n                        </clr-accordion>\n                        <div class=\"clr-row\">\n                          <button\n                            class=\"btn btn-link btn-sm\"\n                            (click)=\"addTag(col, $event)\"\n                          >\n                            Add tag\n                          </button>\n                        </div>\n                      </div>\n                    </clr-stack-content>\n                  </clr-stack-block>\n                </clr-stack-block>\n                <clr-stack-block\n                  *ngIf=\"\n                    isSimpleInput(sectionInEdit) ||\n                    isSectionType(sectionInEdit, 'meta')\n                  \"\n                >\n                  <clr-stack-label>\n                    Inputs\n                    <clr-tooltip *ngIf=\"hasPrefill(sectionInEdit)\">\n                      <clr-icon\n                        clrTooltipTrigger\n                        shape=\"warning-standard\"\n                        class=\"is-warning is-solid\"\n                        size=\"16\"\n                      ></clr-icon>\n                      <clr-tooltip-content\n                        clrPosition=\"top-right\"\n                        clrSize=\"md\"\n                        *clrIfOpen\n                      >\n                        <span\n                          >Modifying this section might\n                          <b>clear existing prefill</b>.</span\n                        >\n                      </clr-tooltip-content>\n                    </clr-tooltip>\n                  </clr-stack-label>\n                  <clr-stack-content *ngIf=\"sectionInEdit\">\n                    {{ sectionInEdit[\"inputs\"].length }} inputs\n                    <button\n                      class=\"btn btn-sm btn-link btn-icon\"\n                      title=\"Add input\"\n                      (click)=\"addInput($event)\"\n                      style=\"margin: 0;\"\n                    >\n                      <clr-icon shape=\"plus\"></clr-icon>\n                    </button>\n                  </clr-stack-content>\n                  <clr-stack-block\n                    *ngFor=\"let input of sectionInEdit['inputs']; index as i\"\n                  >\n                    <clr-stack-label>\n                      Input {{ i + 1 }}\n                      <clr-dropdown>\n                        <button clrDropdownTrigger>\n                          <clr-icon\n                            shape=\"ellipsis-vertical\"\n                            size=\"16\"\n                          ></clr-icon>\n                        </button>\n                        <clr-dropdown-menu *clrIfOpen>\n                          <div\n                            clrDropdownItem\n                            (click)=\"deleteInArray(i, sectionInEdit['inputs'])\"\n                          >\n                            Delete input\n                          </div>\n                          <div\n                            clrDropdownItem\n                            *ngIf=\"i > 0\"\n                            (click)=\"\n                              moveInArray(i, i - 1, sectionInEdit['inputs'])\n                            \"\n                          >\n                            Move up\n                          </div>\n                          <div\n                            clrDropdownItem\n                            *ngIf=\"i < sectionInEdit['inputs'].length - 1\"\n                            (click)=\"\n                              moveInArray(i, i + 1, sectionInEdit['inputs'])\n                            \"\n                          >\n                            Move down\n                          </div>\n                        </clr-dropdown-menu>\n                      </clr-dropdown>\n                    </clr-stack-label>\n                    <clr-stack-content>\n                      <clr-input-container>\n                        <label>Label</label>\n                        <input clrInput [(ngModel)]=\"input['label']\" />\n                      </clr-input-container>\n                      <clr-select-container\n                        *ngIf=\"isSectionType(sectionInEdit, 'simple-input')\"\n                      >\n                        <label>Type</label>\n                        <select\n                          [(ngModel)]=\"input['type']\"\n                          (ngModelChange)=\"typeChanged(input, $event)\"\n                          clrSelect\n                        >\n                          <option value=\"division-select\"\n                            >Division Select</option\n                          >\n                          <option value=\"text\">Text</option>\n                          <option value=\"number\">Number</option>\n                          <option value=\"date-select\">Date</option>\n                          <option value=\"tag-select\">Tag Select</option>\n                          <option value=\"month-select\">Month</option>\n                          <option value=\"textarea\">Multiline text</option>\n                        </select>\n                        <div\n                          class=\"clr-col\"\n                          *ngIf=\"isEqual(input['type'], 'tag-select')\"\n                        >\n                          <div class=\"clr-row\">\n                            <label class=\"clr-control-label\">Tags</label>\n                          </div>\n                          <clr-accordion>\n                            <clr-accordion-panel\n                              *ngFor=\"let tag of input['tags']; index as i\"\n                            >\n                              <clr-accordion-title\n                                >{{ tag[\"icon\"] }}\n                                {{ tag[\"label\"] }}\n                                <button\n                                  class=\"btn btn-link btn-sm btn-icon\"\n                                  (click)=\"deleteTag(input, i)\"\n                                  style=\"margin: 0;\"\n                                >\n                                  <clr-icon\n                                    shape=\"trash\"\n                                    class=\"is-danger\"\n                                  ></clr-icon>\n                                </button>\n                              </clr-accordion-title>\n                              <clr-accordion-content\n                                *clrIfExpanded\n                                class=\"tagAccordion\"\n                              >\n                                <label class=\"clr-control-label\"\n                                  >Tag label</label\n                                >\n                                <input clrInput [(ngModel)]=\"tag['label']\" />\n                                <label class=\"clr-control-label\"\n                                  >Tag icon</label\n                                >\n                                <emoji-picker\n                                  (emoji-click)=\"editTagEmoji(input, i, $event)\"\n                                ></emoji-picker>\n                              </clr-accordion-content>\n                            </clr-accordion-panel>\n                          </clr-accordion>\n                          <div class=\"clr-row\">\n                            <button\n                              class=\"btn btn-link btn-sm\"\n                              (click)=\"addTag(input, $event)\"\n                            >\n                              Add tag\n                            </button>\n                          </div>\n                        </div>\n                      </clr-select-container>\n\n                      <clr-select-container\n                        *ngIf=\"isSectionType(sectionInEdit, 'meta')\"\n                      >\n                        <label>Link</label>\n                        <select\n                          [(ngModel)]=\"input['link']\"\n                          (ngModelChange)=\"linkChanged(input, $event)\"\n                          clrSelect\n                        >\n                          <option value=\"coverageDate\"\n                            >Report coverage date</option\n                          >\n                          <option value=\"additionalInfo\"\n                            >Additional info</option\n                          >\n                          <option value=\"title\">Report title</option>\n                          <option value=\"subject\">Report subject</option>\n                          <option value=\"tags\">Report tags</option>\n                        </select>\n                      </clr-select-container>\n                      <div\n                        class=\"clr-col\"\n                        *ngIf=\"isEqual(input['type'], 'tag-select')\"\n                      >\n                        <div class=\"clr-row\">\n                          <label class=\"clr-control-label\">Tags</label>\n                        </div>\n                        <clr-accordion>\n                          <clr-accordion-panel\n                            *ngFor=\"let tag of input['tags']; index as i\"\n                          >\n                            <clr-accordion-title\n                              >{{ tag[\"icon\"] }}\n                              {{ tag[\"label\"] }}\n                              <button\n                                class=\"btn btn-link btn-sm btn-icon\"\n                                (click)=\"deleteTag(input, i)\"\n                                style=\"margin: 0;\"\n                              >\n                                <clr-icon\n                                  shape=\"trash\"\n                                  class=\"is-danger\"\n                                ></clr-icon>\n                              </button>\n                            </clr-accordion-title>\n                            <clr-accordion-content\n                              *clrIfExpanded\n                              class=\"tagAccordion\"\n                            >\n                              <label class=\"clr-control-label\">Tag label</label>\n                              <input clrInput [(ngModel)]=\"tag['label']\" />\n                              <label class=\"clr-control-label\">Tag icon</label>\n                              <emoji-picker\n                                (emoji-click)=\"editTagEmoji(input, i, $event)\"\n                              ></emoji-picker>\n                            </clr-accordion-content>\n                          </clr-accordion-panel>\n                        </clr-accordion>\n                        <div class=\"clr-row\">\n                          <button\n                            class=\"btn btn-link btn-sm\"\n                            (click)=\"addTag(input, $event)\"\n                          >\n                            Add tag\n                          </button>\n                        </div>\n                      </div>\n                    </clr-stack-content>\n                    <!-- Show tag options if input is tag-select -->\n                  </clr-stack-block>\n                </clr-stack-block>\n              </clr-stack-view>\n            </clr-tab-content>\n          </clr-tab>\n          <clr-tab>\n            <button clrTabLink>Preview & prefill</button>\n            <clr-tab-content *clrIfActive=\"true\">\n              <p>\n                <clr-icon shape=\"help-info\"></clr-icon> Prefill is the default\n                information present in each section. You can use it to offer\n                hints on how a form should be filled.\n              </p>\n              <simple-input\n                *ngIf=\"\n                  isSimpleInput(sectionInEdit) ||\n                  isSectionType(sectionInEdit, 'meta')\n                \"\n                [interface]=\"sectionInEdit\"\n              >\n              </simple-input>\n\n              <datagrid-section\n                *ngIf=\"isDatagrid(sectionInEdit)\"\n                [interface]=\"sectionInEdit\"\n              >\n              </datagrid-section>\n              <!-- <table *ngIf=\"isDatagrid(sectionInEdit)\" class=\"table\">\n                <thead>\n                  <tr>\n                    <th>\n                      <p class=\"p8\">EDIT</p>\n                    </th>\n                    <th *ngFor=\"let col of sectionInEdit['columns']\">\n                      {{ col.label }}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let row of sectionInEdit['value']; index as i\">\n                    <td>\n                      <button\n                        class=\"btn btn-sm btn-link btn-icon\"\n                      >\n                        <clr-icon shape=\"trash\"></clr-icon>\n                      </button>\n                    </td>\n                    <td *ngFor=\"let col of row['row']; index as j\">\n                      <select\n                        *ngIf=\"isDatatype(j, 'division-select')\"\n                        [(ngModel)]=\"sectionInEdit['value'][i]['row'][j]\"\n                        class=\"clr-select\"\n                      >\n                        <option\n                          *ngFor=\"\n                            let division of (constants$ | async)['divisions']\n                          \"\n                          [value]=\"division['label']\"\n                          >{{ division[\"label\"] }}</option\n                        >\n                      </select>\n                      <input\n                        *ngIf=\"isDatatype(j, 'date-select')\"\n                        type=\"date\"\n                        style=\"margin: 0;\"\n                        clrDate\n                        name=\"demo\"\n                        size=\"20\"\n                        [(ngModel)]=\"sectionInEdit['value'][i]['row'][j]\"\n                      />\n                      <clr-checkbox-container\n                        *ngIf=\"isDatatype(j, 'tag-select')\"\n                        clrInline\n                      >\n                        <clr-checkbox-wrapper\n                          *ngFor=\"let tag of sectionInEdit['tags']\"\n                        >\n                          <input\n                            type=\"checkbox\"\n                            clrCheckbox\n                            [ngModel]=\"hasTag(i, j, tag)\"\n                            (ngModelChange)=\"toggleTag(i, j, $event, tag)\"\n                          />\n                          <label [title]=\"tag['label']\">{{\n                            tag[\"icon\"]\n                          }}</label>\n                        </clr-checkbox-wrapper>\n                      </clr-checkbox-container>\n                      <input\n                        *ngIf=\"isDatatype(j, 'text')\"\n                        type=\"text\"\n                        size=\"20\"\n                        [(ngModel)]=\"sectionInEdit['value'][i]['row'][j]\"\n                        class=\"clr-input\"\n                        placeholder=\"Label\"\n                      />\n                      <input\n                        *ngIf=\"isDatatype(j, 'number')\"\n                        type=\"number\"\n                        size=\"20\"\n                        [(ngModel)]=\"sectionInEdit['value'][i]['row'][j]\"\n                        class=\"clr-input\"\n                        placeholder=\"Label\"\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table> -->\n            </clr-tab-content>\n          </clr-tab>\n        </clr-tabs>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancelEditSection()\">\n          Cancel\n        </button>\n        <button\n          class=\"btn btn-warning-outline\"\n          (click)=\"deleteSection(sectionInEdit)\"\n        >\n          Delete section\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"finishEditSection()\"\n        >\n          Apply changes\n        </button>\n      </div>\n    </clr-modal>\n    <clr-modal [(clrModalOpen)]=\"editPageOpened\">\n      <h3 class=\"modal-title\">Page properties</h3>\n      <div class=\"modal-body\" style=\"overflow: auto;\">\n        <div class=\"clr-col-12\">\n          <div class=\"clr-row\">\n            <clr-input-container>\n              <label>Page title</label>\n              <input clrInput [(ngModel)]=\"currentPage.title\" />\n            </clr-input-container>\n          </div>\n          <div class=\"clr-row\" style=\"padding-top: 1rem;\">\n            <label class=\"clr-control-label\">Page order </label>\n            <button\n              class=\"btn btn-link btn-sm\"\n              title=\"Move up\"\n              (click)=\"movePageUp()\"\n              [disabled]=\"currentPage.index < 1\"\n              style=\"margin: 0;\"\n            >\n              <clr-icon shape=\"angle\" dir=\"up\"></clr-icon>\n            </button>\n            {{ currentPage.index + 1 }}/{{ _template.pages.length }}\n            <button\n              class=\"btn btn-link btn-sm\"\n              title=\"Move down\"\n              style=\"margin: 0;\"\n              (click)=\"movePageDown()\"\n              [disabled]=\"currentPage.index > _template.pages.length - 2\"\n            >\n              <clr-icon shape=\"angle\" dir=\"down\"></clr-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-danger\"\n          (click)=\"deletePage(currentPage.index)\"\n        >\n          Delete page\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"finishEditPage()\"\n        >\n          Finish\n        </button>\n      </div>\n    </clr-modal>\n  </div>\n  <button\n    class=\"btn btn-primary builder-save-button\"\n    [disabled]=\"!templateValid\"\n    [title]=\"validMessage\"\n    (click)=\"openSaveTemplate()\"\n  >\n    <clr-icon shape=\"floppy\"></clr-icon> Save template\n  </button>\n  <clr-modal\n    [(clrModalOpen)]=\"saveTemplateOpen\"\n    *ngIf=\"saveTemplateOpen\"\n    [clrModalSize]=\"'lg'\"\n  >\n    <h3 class=\"modal-title\">Save template?</h3>\n    <div class=\"modal-body\" style=\"overflow-y: auto;\">\n      <b>Title: </b>{{ _template.templateID }} <br />\n      <span *ngIf=\"originalTemplateName\"\n        ><b>Original title: </b>{{ originalTemplateName }} <br\n      /></span>\n      <b>Page count: </b>{{ _template.pages.length }} <br />\n      <hr />\n\n      <div style=\"overflow-y: auto; overflow-x: hidden; height: 75%;\">\n        <b>Magic text (for nerds):</b>\n        <pre style=\"max-height: 400px; overflow-y: auto;\">{{\n          getMagicText()\n        }}</pre>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn\" (click)=\"cancelSaveTemplate()\">\n        Cancel\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-success\"\n        [clrLoading]=\"saveLoadingStatus\"\n        (click)=\"saveTemplate()\"\n      >\n        Save template\n      </button>\n    </div>\n  </clr-modal>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-division-select',\n  templateUrl: './division-select.component.html',\n  styleUrls: ['./division-select.component.css'],\n})\nexport class DivisionSelectComponent implements OnInit {\n  @Input() label: string = 'Divisions';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>division-select works!</p>\n","import {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  NG_VALUE_ACCESSOR,\r\n  ControlValueAccessor,\r\n} from '@angular/forms';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  forwardRef,\r\n  HostBinding,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'month-select',\r\n  templateUrl: './month-select.component.html',\r\n  styleUrls: ['./month-select.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MonthSelectComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class MonthSelectComponent implements OnInit, ControlValueAccessor {\r\n  @Input() label: string;\r\n  year: number = new Date().getFullYear();\r\n  monthIndex: number;\r\n  dateString: string; //ISO date string\r\n\r\n  formGroup: FormGroup;\r\n\r\n  onChange = (newDateString: string) => {};\r\n  onTouched: any = () => {};\r\n\r\n  set value(newDateString: string) {\r\n    this.dateString = newDateString;\r\n    this.onChange(newDateString);\r\n    this.onTouched(newDateString);\r\n  }\r\n\r\n  writeValue(date: string): void {\r\n    if (!date) {\r\n      date = new Date().toISOString();\r\n    }\r\n    this.dateString = date;\r\n    console.log(date);\r\n\r\n    this.year = new Date(date).getFullYear();\r\n    this.monthIndex = new Date(date).getMonth();\r\n    console.log(this._monthNames[this.monthIndex]);\r\n    this.formGroup.get('yearInput').setValue(this.year);\r\n    this.formGroup\r\n      .get('monthInput')\r\n      .setValue(this._monthNames[this.monthIndex]);\r\n  }\r\n\r\n  registerOnChange(fn: (newDateString: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.formGroup.disable();\r\n    } else this.formGroup.enable();\r\n  }\r\n\r\n  _monthNames: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = new FormGroup({\r\n      monthInput: new FormControl(),\r\n      yearInput: new FormControl(this.year),\r\n    });\r\n    console.log('Initial is ', this.monthIndex);\r\n    if (!this.monthIndex) {\r\n      this.dateString;\r\n    }\r\n    this.formGroup.valueChanges.subscribe((newValue) => {\r\n      if (\r\n        this.monthIndex !== this._monthNames.indexOf(newValue['monthInput'])\r\n      ) {\r\n        console.log(this._monthNames.indexOf(newValue['monthInput']));\r\n        let monthIndex = this._monthNames.indexOf(newValue['monthInput']);\r\n        if (monthIndex > -1)\r\n          this.monthIndex = this._monthNames.indexOf(newValue['monthInput']);\r\n      }\r\n\r\n      this.year = newValue['yearInput'];\r\n      let date = new Date();\r\n      date.setMonth(this.monthIndex);\r\n      date.setFullYear(this.year);\r\n      this.dateString = date.toISOString();\r\n      this.value = this.dateString;\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"formGroup\">\r\n  <label for=\"\" class=\"p4\">{{ label }}</label>\r\n  <div class=\"clr-row clr-align-items-start\" style=\"margin: 0;\">\r\n    <select clrSelect class=\"clr-col\" formControlName=\"monthInput\">\r\n      <option [value]=\"month\" *ngFor=\"let month of _monthNames\">\r\n        {{ month }}</option\r\n      >\r\n    </select>\r\n    <clr-input-container class=\"clr-col\">\r\n      <input\r\n        clrInput\r\n        style=\"margin-left: 0.5rem;\"\r\n        type=\"number\"\r\n        placeholder=\"Year\"\r\n        formControlName=\"yearInput\"\r\n      />\r\n      <clr-control-error>Does this year make sense?</clr-control-error>\r\n    </clr-input-container>\r\n  </div>\r\n</form>\r\n","import { auth } from 'firebase/app';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  ValidatorFn,\r\n  AbstractControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\nfunction checkMatch(\r\n  control: AbstractControl\r\n): { [key: string]: boolean } | null {\r\n  let password1 = control.get('newPasswordInput').value;\r\n  let password2 = control.get('confirmPasswordInput').value;\r\n  if (password1 !== password2) {\r\n    return {\r\n      notMatching: true,\r\n    };\r\n  } else return null;\r\n}\r\n\r\nfunction checkEmail(\r\n  control: AbstractControl\r\n): { [key: string]: boolean } | null {\r\n  let email: string = control.get('emailInput').value;\r\n  let domain = email.split('@')[1];\r\n  if (!(domain === 'ebrpl.com' || domain === 'brla.gov')) {\r\n    return {\r\n      outsideEmail: true,\r\n    };\r\n  } else return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginGroup: FormGroup;\r\n  createAccountGroup: FormGroup;\r\n  forgotPasswordGroup: FormGroup;\r\n  currentScreen: string = 'login';\r\n  alert: string = null;\r\n  alertMessage: string = '';\r\n\r\n  constructor(public _Router: Router, public userv: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginGroup = new FormGroup({\r\n      emailInput: new FormControl('', Validators.required),\r\n      passwordInput: new FormControl('', Validators.required),\r\n    });\r\n    this.createAccountGroup = new FormGroup(\r\n      {\r\n        emailInput: new FormControl('', Validators.required),\r\n        newPasswordInput: new FormControl('', Validators.required),\r\n        confirmPasswordInput: new FormControl('', Validators.required),\r\n        branchSelect: new FormControl('Branch', Validators.required),\r\n      },\r\n      [checkMatch, checkEmail]\r\n    );\r\n    this.forgotPasswordGroup = new FormGroup({\r\n      emailInput: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  tryLogin() {\r\n    console.log('Logging in...');\r\n    let email = this.loginGroup.get('emailInput').value;\r\n    let password = this.loginGroup.get('passwordInput').value;\r\n    console.log(this.loginGroup.get('emailInput').value);\r\n    this.userv\r\n      .logIn(email, password)\r\n      .then(() => {\r\n        console.log('Login successful.');\r\n        this._Router.navigate(['']);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.showErrorAlert(\r\n          'Invalid username or password. Does this account exist?'\r\n        );\r\n      });\r\n  }\r\n\r\n  createAccount() {\r\n    let email = this.createAccountGroup.get('emailInput').value;\r\n    let newPassword = this.createAccountGroup.get('newPasswordInput').value;\r\n    let confirmPassword = this.createAccountGroup.get('confirmPasswordInput')\r\n      .value;\r\n    let branch = this.createAccountGroup.get('branchSelect').value;\r\n    if (!this.createAccountGroup.errors) {\r\n      console.log('Creating account');\r\n      this.hideAlert();\r\n      //pass a fresh User to createAccount, along with new password\r\n      this.userv\r\n        .createAccount(\r\n          {\r\n            email: email,\r\n            emailVerified: false,\r\n            branch: branch,\r\n            role: 'user',\r\n          },\r\n          newPassword\r\n        )\r\n        .then(() => {\r\n          auth().currentUser.sendEmailVerification();\r\n          this.showSuccessAlert(\r\n            'Account successfully created. Please check your email to finish up. Redirecting...'\r\n          );\r\n          setTimeout(() => {\r\n            this._Router.navigate(['']);\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.error('ERROR' + error);\r\n          this.showErrorAlert(error);\r\n          this.createAccountGroup.setErrors({ firebase: true });\r\n        });\r\n    } else if (this.createAccountGroup.getError('notMatching')) {\r\n      console.error('Passwords do not match');\r\n      this.showErrorAlert('Passwords do not match.');\r\n    } else if (this.createAccountGroup.getError('outsideEmail')) {\r\n      console.error('Employee email required.');\r\n      this.showErrorAlert('Please use your employee email.');\r\n    } else {\r\n      console.error(this.createAccountGroup.errors);\r\n    }\r\n  }\r\n\r\n  sendResetEmail() {\r\n    auth()\r\n      .sendPasswordResetEmail(this.forgotPasswordGroup.get('emailInput').value)\r\n      .catch((error) => {\r\n        console.log(error.code);\r\n      });\r\n    this.showSuccessAlert(\r\n      'If that account exists, a reset email has been sent.'\r\n    );\r\n    this.showLogin();\r\n  }\r\n\r\n  showErrorAlert(error: string) {\r\n    this.alert = 'danger';\r\n    this.alertMessage = error;\r\n  }\r\n\r\n  showSuccessAlert(message: string) {\r\n    this.alert = 'success';\r\n    this.alertMessage = message;\r\n  }\r\n\r\n  hideAlert() {\r\n    this.alert = null;\r\n    this.alertMessage = '';\r\n  }\r\n\r\n  showSignup() {\r\n    this.currentScreen = 'signup';\r\n    this.hideAlert();\r\n  }\r\n\r\n  showLogin() {\r\n    this.currentScreen = 'login';\r\n    //this.hideAlert();\r\n  }\r\n  showReset() {\r\n    this.currentScreen = 'reset';\r\n    this.hideAlert();\r\n  }\r\n\r\n  get alertClass() {\r\n    if (this.alert === 'danger') {\r\n      return 'alert alert-danger';\r\n    } else if (this.alert === 'warning') {\r\n      return 'alert alert-warning';\r\n    } else if (this.alert === 'info') {\r\n      return 'alert alert-info';\r\n    } else if (this.alert === 'success') {\r\n      return 'alert alert-success';\r\n    } else return null;\r\n  }\r\n\r\n  get loginVisible() {\r\n    return this.currentScreen === 'login';\r\n  }\r\n  get signupVisible() {\r\n    return this.currentScreen === 'signup';\r\n  }\r\n  get resetVisible() {\r\n    return this.currentScreen === 'reset';\r\n  }\r\n\r\n  getConstant(constantName: string) {\r\n    return [\r\n      'Main Library',\r\n      'Baker Branch',\r\n      'Bluebonnet Regional Branch',\r\n      'Carver Branch',\r\n      'Central Branch',\r\n      'Delmont Gardens Branch',\r\n      'Eden Park Branch',\r\n      'Fairwood Branch',\r\n      'Greenwell Springs Rd. Regional Branch',\r\n      'Jones Creek Regional Branch',\r\n      'Pride-Chaneyville Branch',\r\n      'River Center Branch',\r\n      'Scotlandville Branch',\r\n      'Zachary Branch',\r\n    ];\r\n  }\r\n}\r\n","<div class=\"clr-row clr-justify-content-center\" style=\"width: 95vw;\">\r\n  <div class=\"clr-col clr-offset-md-4 login-wrapper\">\r\n    <form class=\"login\" [formGroup]=\"loginGroup\" *ngIf=\"loginVisible\">\r\n      <section class=\"title\">\r\n        <h3 class=\"welcome\">Welcome to the</h3>\r\n        Monthly Program Statistics tool\r\n        <h5 class=\"hint\" *ngIf=\"!resetVisible\">\r\n          Use your staff email to sign in, or create a new account now\r\n        </h5>\r\n      </section>\r\n      <div class=\"login-group\">\r\n        <clr-input-container>\r\n          <label class=\"clr-sr-only\">Staff email</label>\r\n          <input\r\n            type=\"email\"\r\n            formControlName=\"emailInput\"\r\n            clrInput\r\n            placeholder=\"Staff email\"\r\n          />\r\n        </clr-input-container>\r\n        <clr-password-container *ngIf=\"loginVisible\">\r\n          <label class=\"clr-sr-only\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"passwordInput\"\r\n            clrPassword\r\n            placeholder=\"Password\"\r\n            autocomplete=\"current-password\"\r\n          />\r\n          <clr-control-helper\r\n            >Forgot your password?\r\n            <a (click)=\"showReset()\">Reset it here.</a></clr-control-helper\r\n          >\r\n        </clr-password-container>\r\n        <div *ngIf=\"alert\" [className]=\"alertClass\" role=\"alert\">\r\n          <div class=\"alert-items\">\r\n            <div class=\"alert-item static\">\r\n              <span class=\"alert-text\">\r\n                {{ alertMessage }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          (click)=\"tryLogin()\"\r\n          *ngIf=\"loginVisible\"\r\n          class=\"btn btn-primary\"\r\n          [disabled]=\"loginGroup.invalid\"\r\n        >\r\n          LOG IN\r\n        </button>\r\n        <a (click)=\"showSignup()\" *ngIf=\"loginVisible\" class=\"signup\"\r\n          >Or create a new account</a\r\n        >\r\n      </div>\r\n    </form>\r\n    <form class=\"login\" [formGroup]=\"createAccountGroup\" *ngIf=\"signupVisible\">\r\n      <section class=\"title\">\r\n        <h3 class=\"welcome\">Welcome to the</h3>\r\n        Monthly Program Statistics tool\r\n        <h5 class=\"hint\">\r\n          Use your staff email to sign in, or create a new account now\r\n        </h5>\r\n      </section>\r\n      <div class=\"login-group\">\r\n        <clr-input-container>\r\n          <label class=\"clr-sr-only\">Staff email</label>\r\n          <input\r\n            type=\"email\"\r\n            formControlName=\"emailInput\"\r\n            clrInput\r\n            placeholder=\"Staff email\"\r\n          />\r\n        </clr-input-container>\r\n        <clr-select-container>\r\n          <label class=\"clr-sr-only\">Which branch do you work for?</label>\r\n          <select clrSelect name=\"type\" formControlName=\"branchSelect\">\r\n            <option\r\n              [value]=\"branch\"\r\n              *ngFor=\"let branch of getConstant('branches')\"\r\n              >{{ branch }}</option\r\n            >\r\n          </select>\r\n          <clr-control-helper>Which branch do you work for?</clr-control-helper>\r\n        </clr-select-container>\r\n        <clr-password-container>\r\n          <label class=\"clr-sr-only\">New password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"newPasswordInput\"\r\n            clrPassword\r\n            placeholder=\"New password\"\r\n            autocomplete=\"new-password\"\r\n          />\r\n        </clr-password-container>\r\n        <clr-password-container>\r\n          <label class=\"clr-sr-only\">Confirm password</label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"confirmPasswordInput\"\r\n            clrPassword\r\n            placeholder=\"Confirm password\"\r\n          />\r\n        </clr-password-container>\r\n        <div *ngIf=\"alert\" [className]=\"alertClass\" role=\"alert\">\r\n          <div class=\"alert-items\">\r\n            <div class=\"alert-item static\">\r\n              <span class=\"alert-text\">\r\n                {{ alertMessage }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          (click)=\"createAccount()\"\r\n          class=\"btn btn-primary\"\r\n          [disabled]=\"createAccountGroup.invalid\"\r\n        >\r\n          Create account\r\n        </button>\r\n        <a (click)=\"showLogin()\" *ngIf=\"signupVisible\" class=\"signup\"\r\n          >Already have an account? Log in</a\r\n        >\r\n      </div>\r\n    </form>\r\n    <form class=\"login\" [formGroup]=\"forgotPasswordGroup\" *ngIf=\"resetVisible\">\r\n      <section class=\"title\">\r\n        <h3 class=\"welcome\">Welcome to the</h3>\r\n        Monthly Program Statistics tool\r\n        <h5 class=\"hint\">\r\n          <hr />\r\n          Reset your password\r\n        </h5>\r\n      </section>\r\n      <div class=\"login-group\">\r\n        <clr-input-container>\r\n          <label class=\"clr-sr-only\">Staff email</label>\r\n          <input\r\n            type=\"email\"\r\n            formControlName=\"emailInput\"\r\n            clrInput\r\n            placeholder=\"Staff email\"\r\n          />\r\n        </clr-input-container>\r\n        <div\r\n          *ngIf=\"!forgotPasswordGroup.valid\"\r\n          [className]=\"alertClass\"\r\n          role=\"alert\"\r\n        >\r\n          <div class=\"alert-items\">\r\n            <div class=\"alert-item static\">\r\n              <span class=\"alert-text\">\r\n                {{ alertMessage }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          (click)=\"sendResetEmail()\"\r\n          *ngIf=\"resetVisible\"\r\n          class=\"btn btn-primary\"\r\n          [disabled]=\"forgotPasswordGroup.invalid\"\r\n        >\r\n          Send reset email\r\n        </button>\r\n        <a (click)=\"showLogin()\" class=\"signup\">Back to login</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { auth } from 'firebase/app';\r\nimport { ReportService } from 'src/app/services/report.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  report: Report;\r\n  provider;\r\n  vw = 0;\r\n  offline: boolean;\r\n\r\n  constructor(\r\n    private _ReportService: ReportService,\r\n    public auth: AngularFireAuth,\r\n    public _Router: Router,\r\n    public userv: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._ReportService.getReportObservable().subscribe((observer) => {\r\n      this.report = observer;\r\n    });\r\n    this.vw = Math.max(\r\n      document.documentElement.clientWidth || 0,\r\n      window.innerWidth || 0\r\n    );\r\n    window.onresize = (event) => {\r\n      this.vw = Math.max(\r\n        document.documentElement.clientWidth || 0,\r\n        window.innerWidth || 0\r\n      );\r\n    };\r\n    onoffline = () => {\r\n      this.offline = !navigator.onLine;\r\n    };\r\n    ononline = () => {\r\n      this.offline = !navigator.onLine;\r\n    };\r\n  }\r\n\r\n  login() {\r\n    this._Router.navigate(['login']);\r\n  }\r\n\r\n  logout() {\r\n    this.userv.logOut();\r\n    this._Router.navigate(['login']);\r\n  }\r\n\r\n  get userShape(): string {\r\n    if (\r\n      this.userv.getUserSnapshot() &&\r\n      this.userv.getUserSnapshot().role === 'admin'\r\n    ) {\r\n      return 'administrator';\r\n    } else return 'user';\r\n  }\r\n\r\n  get isAdmin() {\r\n    let user = this.userv.getUserSnapshot();\r\n    if (user && user.role === 'admin') {\r\n      return true;\r\n    } else return false;\r\n  }\r\n}\r\n","<clr-alert\n  *ngIf=\"offline\"\n  [clrAlertType]=\"'warning'\"\n  [clrAlertAppLevel]=\"true\"\n  [clrAlertClosable]=\"false\"\n>\n  <clr-alert-item>\n    <span class=\"alert-text\">\n      It looks like you aren't connected to the internet.\n    </span>\n    <!-- <div class=\"alert-actions\">\n          <button class=\"btn alert-action\">Fix</button>\n      </div> -->\n  </clr-alert-item>\n</clr-alert>\n<header class=\"header header-7\">\n  <div class=\"branding app-title\" style=\"z-index: 1000;\">\n    <a routerLink=\"\" class=\"nav-link\">\n      <img src=\"assets/logo.svg\" *ngIf=\"vw > 600\" />\n      <span class=\"title\"\n        >Monthly Program Statistics\n        <span class=\"badge badge-light-blue\" *ngIf=\"isAdmin\">Admin</span></span\n      >\n    </a>\n  </div>\n  <div class=\"reportTitle\" *ngIf=\"report\">\n    <p class=\"titleText\" *ngIf=\"report.coverageDate\">\n      {{ report.templateID }}: {{ report.coverageDate | date: \"MMMM \t’yy\" }}\n    </p>\n  </div>\n  <div class=\"header-actions navbar-links\" *ngIf=\"!offline\">\n    <clr-dropdown *ngIf=\"auth.user | async as user; else logIn\">\n      <button\n        class=\"nav-text\"\n        clrDropdownTrigger\n        aria-label=\"open user profile\"\n      >\n        <clr-icon [attr.shape]=\"userShape\"></clr-icon>\n        <span *ngIf=\"vw > 769\">{{ user.email }}</span>\n      </button>\n      <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n        <a [routerLink]=\"['preferences']\" clrDropdownItem>Preferences</a>\n        <a (click)=\"logout()\" clrDropdownItem>Log out</a>\n      </clr-dropdown-menu>\n    </clr-dropdown>\n    <ng-template #logIn>\n      <a class=\"nav-link nav-text\" (click)=\"login()\">LOGIN</a>\n    </ng-template>\n  </div>\n</header>\n","import { Router } from '@angular/router';\nimport { ClrLoadingState } from '@clr/angular';\nimport { UserService } from 'src/app/services/user.service';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ConstantService } from './../../services/constant.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences',\n  templateUrl: './preferences.component.html',\n  styleUrls: ['./preferences.component.css'],\n})\nexport class PreferencesComponent implements OnInit {\n  formGroup: FormGroup;\n  constants: Observable<Object>;\n  saveBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n  constructor(\n    private _ConstantService: ConstantService,\n    private _UserService: UserService,\n    private _Router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup({\n      branchSelect: new FormControl(''),\n    });\n    this.constants = this._ConstantService.constants;\n    this._UserService.getUserObservable().subscribe((user) => {\n      if (user) this.formGroup.get('branchSelect').setValue(user.branch);\n    });\n  }\n\n  saveChanges() {\n    this.saveBtnState = ClrLoadingState.LOADING;\n    this._UserService\n      .setBranch(this.formGroup.get('branchSelect').value)\n      .then(() => {\n        this.saveBtnState = ClrLoadingState.SUCCESS;\n        console.log(\n          '[Preferences Component] Changes saved. Redirecting to home.'\n        );\n        this._Router.navigate(['']);\n      })\n      .catch(() => {\n        this.saveBtnState = ClrLoadingState.ERROR;\n      });\n  }\n}\n","<div\n  class=\"clr-row clr-justify-content-center\"\n  style=\"width: 100vw; margin-left: 1rem;\"\n>\n  <div class=\"clr-col clr-col-md-6 clr-col-xl-6\">\n    <div class=\"clr-row clr-justify-content-between clr-align-items-end\">\n      <h1>User preferences</h1>\n    </div>\n    <div class=\"clr-row\">\n      <form clrForm [formGroup]=\"formGroup\">\n        <h3>Change your branch affiliation</h3>\n        <clr-select-container>\n          <label class=\"clr-sr-only\">Which branch do you work for?</label>\n          <select clrSelect name=\"type\" formControlName=\"branchSelect\">\n            <option\n              [value]=\"branch\"\n              *ngFor=\"let branch of (constants | async)?.branches\"\n              >{{ branch }}</option\n            >\n          </select>\n          <clr-control-helper>Which branch do you work for?</clr-control-helper>\n        </clr-select-container>\n      </form>\n    </div>\n    <div class=\"clr-row\" style=\"margin-top: 3rem;\">\n      <button\n        class=\"btn btn-primary\"\n        [clrLoading]=\"saveBtnState\"\n        (click)=\"saveChanges()\"\n      >\n        Save changes\n      </button>\n    </div>\n  </div>\n</div>\n","import { UserService } from 'src/app/services/user.service';\r\nimport {\r\n  SectionInterface,\r\n  DatagridInterface,\r\n  SimpleInputInterface,\r\n} from './../../interfaces/sections';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReportService } from '../../services/report.service';\r\nimport { DatagridSection } from './../sections/datagrid-section/datagrid-section.component';\r\nimport { AbstractSection } from './../sections/abstract-section/abstract-section.component';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Page } from './../../interfaces/page';\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, RouterModule, Router } from '@angular/router';\r\nimport { SimpleInputSection } from '../sections/simple-input/simple-input.component';\r\nimport { ClrTimelineStepState, ClrLoadingState } from '@clr/angular';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport { report } from 'process';\r\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './report.component.html',\r\n  styleUrls: ['./report.component.css'],\r\n})\r\nexport class ReportComponent implements OnInit, OnDestroy {\r\n  report$: Observable<Report>;\r\n  page$: Observable<Page>;\r\n\r\n  urlPageNumber: number;\r\n\r\n  datagrids: DatagridInterface[] = [];\r\n  simpleInputs: SimpleInputInterface[] = [];\r\n  startPage: SimpleInputSection;\r\n\r\n  markCompleteControl = new FormControl();\r\n  submitButtonState: ClrLoadingState = ClrLoadingState.DEFAULT;\r\n  saveButtonState: ClrLoadingState = ClrLoadingState.DEFAULT;\r\n  saveSuccessful: boolean = false;\r\n  saveTime: number;\r\n\r\n  submitConfirmationVisible: boolean = false;\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    private _Router: Router,\r\n    public _ReportService: ReportService,\r\n    private _UserService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.report$ = this._ReportService.getReportObservable();\r\n    this.page$ = this._ReportService.getPageObservable();\r\n\r\n    this.activeRoute.paramMap.subscribe((params) => {\r\n      this.urlPageNumber = +params.get('page-number');\r\n      if (\r\n        this.urlPageNumber !== null &&\r\n        this.urlPageNumber !== undefined &&\r\n        this.urlPageNumber !== this.currentPageIndex &&\r\n        this._ReportService.report\r\n      ) {\r\n        this._ReportService.openPage(this.urlPageNumber);\r\n      }\r\n    });\r\n\r\n    this.markCompleteControl.valueChanges.subscribe((newState: boolean) => {\r\n      if (newState === true) {\r\n        this._ReportService.setPageStatus(this.currentPageIndex, 'complete');\r\n      } else {\r\n        this._ReportService.setPageStatus(this.currentPageIndex, 'incomplete');\r\n      }\r\n      this._ReportService.saveReportOnline();\r\n    });\r\n\r\n    this.report$.subscribe((report) => {\r\n      if (!report) {\r\n        let reportID = this.activeRoute.snapshot.paramMap.get('report-id');\r\n        let pageNumber = this.activeRoute.snapshot.paramMap.get('page-number');\r\n        this._ReportService.openReport(reportID, +pageNumber);\r\n      }\r\n    });\r\n    //if requested page isn't open, open it\r\n\r\n    this.page$.subscribe((page) => {\r\n      if (page) {\r\n        this.datagrids = [];\r\n        this.simpleInputs = [];\r\n        //process new sections\r\n        page.sections.forEach((section) => {\r\n          if (section['type'] == 'datagrid') {\r\n            this.datagrids.push(section as DatagridInterface);\r\n          } else if (\r\n            section['type'] === 'simple-input' ||\r\n            section['type'] === 'meta'\r\n          ) {\r\n            this.simpleInputs.push(section as SimpleInputInterface);\r\n          }\r\n        });\r\n        this.markCompleteControl.setValue(\r\n          this._ReportService.report.pageStatuses[page.index] === 'complete'\r\n            ? true\r\n            : false\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getPageButtonClass(pageIndex: number) {\r\n    if (pageIndex == this.currentPageIndex) return 'btn btn-primary';\r\n    else return 'btn';\r\n  }\r\n  pageComplete(pageIndex: number): boolean {\r\n    if (!this._ReportService.report) return false;\r\n    return this._ReportService.report.pageStatuses[pageIndex] === 'complete'\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  isDatagrid(section: Object) {\r\n    if (!section || section['type'] !== 'datagrid') {\r\n      return false;\r\n    } else return true;\r\n  }\r\n\r\n  get reportFullyComplete() {\r\n    let fullyComplete = true;\r\n    if (this._ReportService.report) {\r\n      this._ReportService.report.pageStatuses.forEach((elem) => {\r\n        //if one page is incomplete, the whole report is too!\r\n        if (elem !== 'complete') {\r\n          fullyComplete = false;\r\n        }\r\n      });\r\n    }\r\n    return fullyComplete;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._ReportService.closeReport();\r\n  }\r\n\r\n  savePage() {\r\n    this.saveButtonState = ClrLoadingState.LOADING;\r\n\r\n    //save report properties if a meta section is present\r\n    this._ReportService.page.sections.forEach((section) => {\r\n      if (section['type'] === 'meta') {\r\n        this._ReportService.saveReportOnline();\r\n      }\r\n    });\r\n    this._ReportService\r\n      .savePageOnline()\r\n      .then(() => {\r\n        this.saveButtonState = ClrLoadingState.DEFAULT;\r\n        this.saveSuccessful = true;\r\n        this.saveTime = Date.now();\r\n        setTimeout(() => (this.saveSuccessful = false), 2500);\r\n      })\r\n      .catch(() => {\r\n        this.saveButtonState = ClrLoadingState.ERROR;\r\n      });\r\n  }\r\n\r\n  goToPage(pageNumber: number) {\r\n    //no point saving a page if it hasn't been edited\r\n    if (this.editable) this.savePage();\r\n    this._Router.navigate([\r\n      'report',\r\n      this._ReportService.report.id,\r\n      pageNumber,\r\n    ]);\r\n  }\r\n\r\n  confirmSubmitReport() {\r\n    this.submitConfirmationVisible = true;\r\n  }\r\n\r\n  cancelSubmitReport() {\r\n    this.submitConfirmationVisible = false;\r\n  }\r\n\r\n  submitReport() {\r\n    console.log('[R Comp] Submitting report...');\r\n    this.submitButtonState = ClrLoadingState.LOADING;\r\n    this._ReportService.submitReport().then(() => {\r\n      this.submitButtonState = ClrLoadingState.SUCCESS;\r\n      this._Router.navigate(['']);\r\n    });\r\n  }\r\n\r\n  get currentPageIndex() {\r\n    if (this._ReportService.page) {\r\n      return this._ReportService.page.index;\r\n    } else return null;\r\n  }\r\n\r\n  get currentSections() {\r\n    return this._ReportService.page.sections;\r\n  }\r\n\r\n  //return minutes since last save\r\n  get saveTimeElapsed(): string {\r\n    if (!this.saveTime) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        ((Date.now() - this.saveTime) / (1000 * 60)).toFixed() +\r\n        ' min since save'\r\n      );\r\n    }\r\n  }\r\n\r\n  get saveStale(): boolean {\r\n    //if unsaved or ten minutes have passed\r\n    if (!this.saveTime || (Date.now() - this.saveTime) / (1000 * 60) > 10) {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  setSection(section, eventData) {\r\n    this._ReportService.setSectionValue(\r\n      this.currentPageIndex,\r\n      section.order,\r\n      eventData\r\n    );\r\n    //sections interact with Report properties directly,\r\n    //but it's up to the ReportComponent to save the changes\r\n    //to the database afterwards.\r\n    if (section['meta']) {\r\n      this._ReportService.saveReportOnline();\r\n    }\r\n  }\r\n\r\n  get editable(): boolean {\r\n    //if the report's been submitted and the user isn't an admin,\r\n    //make the report uneditable\r\n    if (\r\n      this._ReportService.report &&\r\n      this._UserService.getUserSnapshot().role !== 'admin' &&\r\n      this._ReportService.report.completionStatus === 'complete'\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  get adminSubmitted(): boolean {\r\n    if (\r\n      this._UserService.getUserSnapshot() &&\r\n      this._UserService.getUserSnapshot().role === 'admin' &&\r\n      this._ReportService.report &&\r\n      this._ReportService.report.completionStatus === 'complete'\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  duplicateCurrentReport() {\r\n    let report = this._ReportService.report;\r\n    console.log(report.id);\r\n    this._ReportService.duplicateReport(report.id).then(\r\n      (newID) => {\r\n        alert('Report successfully duplicated. Moving to new report...');\r\n        this._ReportService\r\n          .openReport(newID)\r\n          .then(() => {\r\n            this._Router.navigate(['report', newID, 0]);\r\n          })\r\n          .catch((reason) => {\r\n            console.error(\r\n              'Error opening new report with ID ' + newID + ': ' + reason\r\n            );\r\n          });\r\n      },\r\n      () => {\r\n        console.error('Error duplicating report ' + report.id);\r\n      }\r\n    );\r\n  }\r\n\r\n  get submitted(): boolean {\r\n    if (\r\n      this._ReportService.report &&\r\n      this._ReportService.report.completionStatus === 'complete'\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"topDiv clr-col\">\r\n  <div\r\n    class=\"clr-row clr-justify-content-center\"\r\n    [class.block-clicks]=\"!editable\"\r\n  >\r\n    <div class=\"clr-col clr-col-lg-10 clr-col-xl-8 sectionCol\">\r\n      <clr-alert\r\n        [clrAlertClosable]=\"false\"\r\n        [clrAlertType]=\"'warning'\"\r\n        *ngIf=\"submitted\"\r\n        [clrAlertIcon]=\"'warning-standard'\"\r\n      >\r\n        <clr-alert-item>\r\n          <span class=\"alert-text\">\r\n            This report has been marked complete. You can still edit it, but\r\n            consider creating a duplicate instead.\r\n          </span>\r\n          <div class=\"alert-actions\">\r\n            <clr-dropdown>\r\n              <button class=\"dropdown-toggle\" clrDropdownTrigger>\r\n                Actions\r\n                <clr-icon shape=\"caret down\"></clr-icon>\r\n              </button>\r\n              <clr-dropdown-menu clrPosition=\"bottom-right\">\r\n                <a\r\n                  (click)=\"duplicateCurrentReport()\"\r\n                  class=\"dropdown-item\"\r\n                  clrDropdownItem\r\n                  >Duplicate this report</a\r\n                >\r\n              </clr-dropdown-menu>\r\n            </clr-dropdown>\r\n          </div>\r\n        </clr-alert-item>\r\n      </clr-alert>\r\n      <h1>\r\n        {{ (page$ | async)?.title }}\r\n      </h1>\r\n      <hr />\r\n      <div *ngFor=\"let section of currentSections\">\r\n        <datagrid-section\r\n          *ngIf=\"isDatagrid(section); else simpleInput\"\r\n          [interface]=\"section\"\r\n          (sectionChanged)=\"setSection(section, $event)\"\r\n        >\r\n        </datagrid-section>\r\n        <ng-template #simpleInput>\r\n          <simple-input\r\n            [interface]=\"section\"\r\n            (sectionChanged)=\"setSection(section, $event)\"\r\n          ></simple-input>\r\n        </ng-template>\r\n      </div>\r\n      <div class=\"clr-col-md-6 clr-offset-md-3 clr-align-self-end\">\r\n        <clr-icon shape=\"help-info\"></clr-icon\r\n        ><em>Try the buttons below to continue the report.</em>\r\n      </div>\r\n      <div style=\"height: 48px;\"></div>\r\n    </div>\r\n  </div>\r\n  <clr-modal [(clrModalOpen)]=\"submitConfirmationVisible\">\r\n    <h3 class=\"modal-title\">All finished?</h3>\r\n    <div class=\"modal-body\">\r\n      <clr-alert\r\n        *ngIf=\"!reportFullyComplete\"\r\n        [clrAlertType]=\"'warning'\"\r\n        [clrAlertClosable]=\"false\"\r\n      >\r\n        <clr-alert-item>\r\n          <span class=\"alert-text\">\r\n            Heads up: not all pages have been marked as complete.\r\n          </span>\r\n        </clr-alert-item>\r\n      </clr-alert>\r\n      <hr />\r\n      <b>Marking a report as complete</b> indicates that all data inside should\r\n      be considered final. You can still edit the report after it's been marked\r\n      complete.\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-outline\"\r\n        (click)=\"cancelSubmitReport()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"submitReport()\"\r\n        [clrLoading]=\"submitButtonState\"\r\n      >\r\n        Mark as complete\r\n      </button>\r\n    </div>\r\n  </clr-modal>\r\n  <div\r\n    class=\"alert alert-success\"\r\n    *ngIf=\"saveSuccessful\"\r\n    role=\"alert\"\r\n    style=\"\r\n      position: fixed;\r\n      bottom: 54px;\r\n      left: 6px;\r\n      width: 10rem;\r\n      z-index: 1000;\r\n    \"\r\n  >\r\n    <div class=\"alert-items\">\r\n      <div class=\"alert-item static\">\r\n        <div class=\"alert-icon-wrapper\">\r\n          <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\r\n        </div>\r\n        <span class=\"alert-text\">Page saved</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"stickybar clr-row\">\r\n    <div class=\"clr-col-8 clr-col-md-10\">\r\n      <div class=\"clr-row clr-justify-content-center clr-align-items-center\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn\"\r\n          [class.btn-primary]=\"saveStale\"\r\n          [class.btn-link]=\"!saveStale\"\r\n          aria-label=\"save page\"\r\n          [clrLoading]=\"saveButtonState\"\r\n          (click)=\"savePage()\"\r\n          title=\"Save current page\"\r\n          *ngIf=\"editable\"\r\n        >\r\n          <clr-icon shape=\"floppy\" [class.has-alert]=\"saveStale\"></clr-icon>\r\n          {{ saveTimeElapsed }}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-icon btn-link\"\r\n          aria-label=\"previous page\"\r\n          [disabled]=\"currentPageIndex < 1\"\r\n          (click)=\"goToPage(currentPageIndex - 1)\"\r\n        >\r\n          <clr-icon shape=\"angle\" dir=\"left\"></clr-icon>\r\n        </button>\r\n        <clr-button-group *ngIf=\"(report$ | async)?.id\">\r\n          <clr-button\r\n            [class]=\"getPageButtonClass(i)\"\r\n            *ngFor=\"let status of (report$ | async)?.pageStatuses; index as i\"\r\n            (click)=\"goToPage(i)\"\r\n          >\r\n            <clr-icon\r\n              shape=\"home\"\r\n              *ngIf=\"i < 1; else showPageNumber\"\r\n            ></clr-icon>\r\n            <ng-template #showPageNumber>\r\n              {{ i }}\r\n            </ng-template>\r\n            <clr-icon\r\n              shape=\"check\"\r\n              *ngIf=\"pageComplete(i)\"\r\n              title=\"Marked complete\"\r\n            ></clr-icon\r\n          ></clr-button>\r\n        </clr-button-group>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-icon btn-link\"\r\n          aria-label=\"next page\"\r\n          [disabled]=\"currentPageIndex > (report$ | async)?.pageCount - 2\"\r\n          (click)=\"goToPage(currentPageIndex + 1)\"\r\n        >\r\n          <clr-icon shape=\"angle\" dir=\"right\"></clr-icon>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn\"\r\n          aria-label=\"next page\"\r\n          (click)=\"confirmSubmitReport()\"\r\n          [class.btn-success]=\"reportFullyComplete\"\r\n          [clrLoading]=\"submitButtonState\"\r\n          *ngIf=\"editable\"\r\n        >\r\n          Mark complete<clr-icon shape=\"step-forward-2\"></clr-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"clr-col-4 clr-col-md-2\" *ngIf=\"editable\">\r\n      <clr-toggle-container #markCompleteToggle>\r\n        <label class=\"p6\" style=\"margin-top: 0.3rem;\">Mark this page:</label>\r\n        <clr-toggle-wrapper>\r\n          <input\r\n            type=\"checkbox\"\r\n            clrToggle\r\n            value=\"option1\"\r\n            name=\"options\"\r\n            [formControl]=\"markCompleteControl\"\r\n          />\r\n          <label *ngIf=\"pageComplete(currentPageIndex); else incompleteLabel\"\r\n            >Complete</label\r\n          >\r\n          <ng-template #incompleteLabel>\r\n            <label>Incomplete</label>\r\n          </ng-template>\r\n        </clr-toggle-wrapper>\r\n      </clr-toggle-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { SectionInterface } from './../../../interfaces/sections';\nimport {\n  Component,\n  OnInit,\n  Inject,\n  Input,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ViewRef,\n} from '@angular/core';\nimport { FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'abstract-section',\n  templateUrl: './abstract-section.component.html',\n  styleUrls: ['./abstract-section.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AbstractSection implements OnInit {\n  @Input() public title: string = 'error';\n  @Input() public subtitle: string = null;\n  @Input() public data: any = null;\n  @Input() public interface: SectionInterface;\n  @Input() public constants: Object = {};\n  @Input() public order: number;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  checkTitle(): boolean {\n    if (this.title == 'Regular programs') return true;\n    else return false;\n  }\n\n  getTitle(): string {\n    return this.title;\n  }\n\n  isType(obj: Object, type: string) {\n    if (obj['type'] == type) {\n      return true;\n    } else false;\n  }\n\n  getCheckboxControl(\n    arrayIndex: number,\n    subarrayIndex: number,\n    array: FormArray\n  ) {\n    if (!array || !array.controls) {\n      console.error(\n        '[Abstract Section] Form array is empty. Has it been built?'\n      );\n      return [];\n    }\n    let checkboxArray = array.controls[arrayIndex] as FormArray;\n    return checkboxArray.controls[subarrayIndex];\n  }\n}\n","<h2>\n  {{ title }}\n</h2>\n<h6 class=\"subtitle\">{{ subtitle }}</h6>\n","import { ConstantService } from './../../../services/constant.service';\r\nimport { TemplateService } from './../../../services/template.service';\r\nimport { DatagridInterface } from './../../../interfaces/sections';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AbstractSection } from '../abstract-section/abstract-section.component';\r\nimport { __makeTemplateObject } from 'tslib';\r\nimport {\r\n  FormControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormGroup,\r\n  AbstractControl,\r\n  Form,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'datagrid-section',\r\n  templateUrl: './datagrid-section.component.html',\r\n  styleUrls: ['./datagrid-section.component.css'],\r\n})\r\nexport class DatagridSection extends AbstractSection implements OnInit {\r\n  formArray = new FormArray([]);\r\n  formGroup: FormGroup;\r\n  formLabels: string[] = [];\r\n\r\n  @Output() sectionChanged = new EventEmitter<Object>();\r\n  @Input() interface: DatagridInterface;\r\n\r\n  addModalOpened: boolean = false;\r\n  editModalOpened: boolean = false;\r\n  showItemAddConfirmation: boolean = false;\r\n  selectedRow: number;\r\n\r\n  constants: Object;\r\n\r\n  constructor(public constantService: ConstantService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.constantService.constants.subscribe((obj) => {\r\n      this.constants = obj;\r\n    });\r\n    if (!this.interface.value) {\r\n      this.interface.value = [];\r\n      console.warn('No value supplied for datagrid ' + this.interface.title);\r\n    }\r\n    this.formGroup = new FormGroup({\r\n      array: this.formArray,\r\n    });\r\n  }\r\n\r\n  hasTag(tagArray: Object[], tagObj) {\r\n    let tagLabels: string[] = [];\r\n    tagArray.forEach((tag) => {\r\n      tagLabels.push(tag['label']);\r\n    });\r\n    return tagLabels.includes(tagObj['label']);\r\n  }\r\n\r\n  convertISOtoTraditional(isoString: string) {\r\n    if (!isoString) {\r\n      return null;\r\n    }\r\n    let date = new Date(isoString);\r\n    let year = date.getFullYear();\r\n    let month = (date.getMonth() + 1).toString();\r\n    let dt = date.getDate().toString();\r\n\r\n    if (date.getDate() < 10) {\r\n      dt = '0' + dt.toString();\r\n    }\r\n    if (date.getMonth() < 10) {\r\n      month = '0' + month;\r\n    }\r\n    let result = month + '/' + dt + '/' + year;\r\n    console.log('Converting: ' + isoString + ' to ' + result);\r\n    return result;\r\n  }\r\n\r\n  convertTraditionalToISO(inputString: string) {\r\n    if (!inputString) {\r\n      return null;\r\n    }\r\n    let stringPieces = inputString.split('/');\r\n    if (stringPieces.length !== 3) {\r\n      console.warn('Invalid date: ' + inputString);\r\n      return null;\r\n    }\r\n    let monthNum: number = +stringPieces[0] - 1;\r\n    let dateNum: number = +stringPieces[1];\r\n    let yearNum: number = +stringPieces[2];\r\n    let date = new Date();\r\n    date.setMonth(monthNum);\r\n    date.setDate(dateNum);\r\n    date.setFullYear(yearNum);\r\n    let result = date.toISOString();\r\n    console.log('Converting: ' + inputString + ' to ' + result);\r\n    return result;\r\n  }\r\n\r\n  buildFormFromInterface(editData?: Object[]) {\r\n    console.log(editData);\r\n    let cols = this.interface.columns;\r\n    this.formArray = new FormArray([]);\r\n    this.formLabels = [];\r\n    if (cols) {\r\n      cols.forEach((column, colIndex) => {\r\n        //push a form control  and label for each column in the datagrid\r\n        this.formLabels.push(column.label);\r\n        //if the column is a tag-select, push a FormArray\r\n        if (column.type === 'tag-select') {\r\n          let tagArray = new FormArray([]);\r\n          if (column.tags) {\r\n            //push a checkbox for each tag\r\n            column.tags.forEach((tag, tagIndex) => {\r\n              let tagControl = new FormControl(false);\r\n              //initalize the checkboxes\r\n              if (\r\n                editData &&\r\n                editData[colIndex] &&\r\n                editData[colIndex]['tags']\r\n              ) {\r\n                tagControl.setValue(\r\n                  this.hasTag(editData[colIndex]['tags'], tag)\r\n                );\r\n                console.log(tag, this.hasTag(column['tags'], tag));\r\n              }\r\n              tagArray.push(tagControl);\r\n            });\r\n            console.log(tagArray.value);\r\n            this.formArray.push(tagArray);\r\n          }\r\n        } else {\r\n          if (editData && editData[colIndex]) {\r\n            console.log('Pushing ' + editData[colIndex]);\r\n            if (column.type === 'date-select') {\r\n              this.formArray.push(\r\n                new FormControl(\r\n                  this.convertISOtoTraditional(editData[colIndex] as string)\r\n                )\r\n              );\r\n            } else {\r\n              this.formArray.push(new FormControl(editData[colIndex]));\r\n            }\r\n          } else {\r\n            this.formArray.push(new FormControl());\r\n          }\r\n        }\r\n      });\r\n      console.log(this.formArray.value);\r\n    } else {\r\n      // just keep the formArray empty if no columns supplied.\r\n      console.warn('[Datagrid] Cannot build form. No columns could be found.');\r\n      return;\r\n    }\r\n\r\n    // let cols = (this.interface as DatagridInterface).columns;\r\n    // this.formArray.clear();\r\n    // if (!cols) {\r\n    //   console.error(this.interface);\r\n    //   console.error(\r\n    //     'No column values were supplied to ' + this.interface.title\r\n    //   );\r\n    //   return;\r\n    // }\r\n    // cols.forEach((column) => {\r\n    //   this.formLabels.push(column['label']);\r\n    //   if (column['type'] === 'tag-select') {\r\n    //     let checkboxArray = new FormArray([]);\r\n\r\n    //     //check if column has attached 'tags' property\r\n    //     if (column['tags']) {\r\n    //       column['tags'].forEach((tag) => {\r\n    //         checkboxArray.push(new FormControl());\r\n    //       });\r\n    //     }\r\n\r\n    //     this.formArray.push(checkboxArray);\r\n    //   } else {\r\n    //     this.formArray.push(new FormControl(''));\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  addRowFromFormArray() {\r\n    let row = [];\r\n    (this.interface as DatagridInterface).columns.forEach((col, index) => {\r\n      if (col['type'] === 'tag-select') {\r\n        let tags: Object[] = [];\r\n        col.tags.forEach((tag, j) => {\r\n          if ((this.formArray.at(index) as FormArray).at(j).value === true)\r\n            tags.push(tag);\r\n        });\r\n        row.push({ tags: tags });\r\n      } else if (col.type === 'date-select') {\r\n        row.push(this.convertTraditionalToISO(this.formArray.at(index).value));\r\n      } else {\r\n        row.push(this.formArray.at(index).value);\r\n      }\r\n    });\r\n    console.log(this.interface);\r\n    this.interface.value.push({ row: row });\r\n    this.sectionChanged.emit(this.interface);\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    (this.interface.value as Array<any>).splice(index, 1);\r\n    this.sectionChanged.emit(this.interface);\r\n  }\r\n\r\n  finishAddModal() {\r\n    this.addModalOpened = false;\r\n    this.addRowFromFormArray();\r\n    this.formArray.reset();\r\n  }\r\n\r\n  openEditModal(rowIndex: number) {\r\n    this.selectedRow = rowIndex;\r\n    let editData = this.interface.value[rowIndex];\r\n    this.buildFormFromInterface(editData['row']);\r\n    this.editModalOpened = true;\r\n  }\r\n\r\n  // convertToFormValues(dataRow): any[] {\r\n  //   let formVals: any[] = [];\r\n  //   //check if any column contains tags\r\n  //   dataRow.row.forEach((col, index) => {\r\n  //     if (\r\n  //       (this.interface as DatagridInterface).columns[index]['type'] ===\r\n  //       'tag-select'\r\n  //     ) {\r\n  //       let colTags: Object[] = [];\r\n  //       if (this.interface['columns'][index]['tags']) {\r\n  //         let colTags: Object[] = this.interface['columns'][index]['tags'];\r\n  //       }\r\n\r\n  //       let rowTags: Object[] = col.tags;\r\n  //       let tagVals: boolean[] = [];\r\n  //       let templateLabels: string[] = [];\r\n  //       colTags.forEach((tag: Object) => {\r\n  //         templateLabels.push(tag['label']);\r\n  //       });\r\n  //       let rowLabels: string[] = [];\r\n  //       rowTags.forEach((tag: Object) => {\r\n  //         rowLabels.push(tag['label']);\r\n  //       });\r\n  //       templateLabels.forEach((templateLabel) => {\r\n  //         if (rowLabels.includes(templateLabel)) {\r\n  //           tagVals.push(true);\r\n  //         } else tagVals.push(false);\r\n  //       });\r\n  //       formVals.push(tagVals);\r\n  //     } else {\r\n  //       formVals.push(col);\r\n  //     }\r\n  //   });\r\n  //   console.log(formVals);\r\n  //   return formVals;\r\n  // }\r\n\r\n  finishEdits() {\r\n    this.editModalOpened = false;\r\n    this.editRow(this.selectedRow);\r\n    this.formArray.reset();\r\n  }\r\n  editRow(rowIndex: number) {\r\n    let row = [];\r\n    (this.interface as DatagridInterface).columns.forEach((col, index) => {\r\n      if (col['type'] === 'tag-select') {\r\n        let tags: Object[] = [];\r\n        col.tags.forEach((tag, j) => {\r\n          if ((this.formArray.at(index) as FormArray).at(j).value === true)\r\n            tags.push(tag);\r\n        });\r\n        row.push({ tags: tags });\r\n      } else if (col.type === 'date-select') {\r\n        row.push(this.convertTraditionalToISO(this.formArray.at(index).value));\r\n      } else {\r\n        row.push(this.formArray.at(index).value);\r\n      }\r\n    });\r\n    console.log('Finished edits: ' + row);\r\n    this.interface.value[rowIndex] = { row: row };\r\n    this.sectionChanged.emit(this.interface);\r\n  }\r\n\r\n  isDate(colIndex) {\r\n    let type = this.interface.columns[colIndex].type;\r\n    if (type === 'date-select' || type === 'month-select') {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  openAddModal() {\r\n    this.buildFormFromInterface();\r\n    this.addModalOpened = true;\r\n  }\r\n\r\n  addAnother() {\r\n    this.addRowFromFormArray();\r\n    this.buildFormFromInterface();\r\n    console.log(this.interface.value);\r\n\r\n    //show a confirmation banner, then hide after 3 seconds\r\n    this.showItemAddConfirmation = true;\r\n    setTimeout(() => {\r\n      this.showItemAddConfirmation = false;\r\n    }, 3000);\r\n  }\r\n\r\n  addModalCancel() {\r\n    this.addModalOpened = false;\r\n    this.formArray.reset();\r\n  }\r\n  editModalCancel() {\r\n    this.editModalOpened = false;\r\n    this.formArray.reset();\r\n  }\r\n\r\n  isTagObj(obj) {\r\n    if (obj !== null && obj !== undefined && obj['tags']) return true;\r\n    else return false;\r\n  }\r\n\r\n  checkArrayValidity() {\r\n    this.formArray.controls.forEach((control) => {\r\n      console.log(control.value + ' | ' + control.status);\r\n    });\r\n    console.log(this.formArray.status);\r\n    console.log(this.formArray.valid);\r\n  }\r\n}\r\n","<h1>{{ interface.title }}</h1>\r\n<h5 class=\"subtitle\" *ngIf=\"interface.subtitle\">{{ interface.subtitle }}</h5>\r\n<clr-datagrid>\r\n  <clr-dg-placeholder\r\n    >Nothing to see here. Try adding more content.</clr-dg-placeholder\r\n  >\r\n  <clr-dg-column *clrDgItems=\"let column of interface.columns\">{{\r\n    column.label\r\n  }}</clr-dg-column>\r\n  <clr-dg-row *ngFor=\"let row of interface.value; index as i\">\r\n    <clr-dg-action-overflow>\r\n      <button class=\"action-item\" (click)=\"openEditModal(i)\">Edit</button>\r\n      <button class=\"action-item\" (click)=\"deleteRow(i)\">Delete</button>\r\n    </clr-dg-action-overflow>\r\n    <clr-dg-cell *ngFor=\"let cell of row.row; index as i\">\r\n      <span *ngIf=\"!isTagObj(cell); else tagRenderer\">\r\n        <span *ngIf=\"isDate(i); else plainCell\">{{\r\n          cell | date: \"MM/dd/yyyy\"\r\n        }}</span>\r\n        <ng-template #plainCell>\r\n          {{ cell }}\r\n        </ng-template>\r\n      </span>\r\n      <ng-template #tagRenderer>\r\n        <span *ngFor=\"let tag of cell.tags\">\r\n          <span title=\"{{ tag.label }}\">{{ tag.icon }}</span>\r\n        </span>\r\n      </ng-template>\r\n    </clr-dg-cell>\r\n  </clr-dg-row>\r\n  <clr-dg-footer>\r\n    <div class=\"btn-group btn-link btn-sm\">\r\n      <button class=\"btn\" (click)=\"openAddModal()\">Add new</button>\r\n    </div>\r\n  </clr-dg-footer>\r\n</clr-datagrid>\r\n<clr-modal #addModal [(clrModalOpen)]=\"addModalOpened\" *ngIf=\"addModalOpened\">\r\n  <h3 class=\"modal-title\">Add row</h3>\r\n  <div class=\"modal-body\">\r\n    <clr-alert\r\n      [clrAlertType]=\"'success'\"\r\n      [(clrAlertClosed)]=\"!showItemAddConfirmation\"\r\n    >\r\n      <clr-alert-item>\r\n        <span class=\"alert-text\">Item successfully added.</span>\r\n      </clr-alert-item>\r\n    </clr-alert>\r\n    <form\r\n      clrForm\r\n      [formGroup]=\"formGroup\"\r\n      *ngFor=\"let column of interface.columns; index as i\"\r\n      clrLayout=\"vertical\"\r\n    >\r\n      <clr-date-container *ngIf=\"isType(column, 'date-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input type=\"date\" clrDate [formControl]=\"formArray.controls[i]\" />\r\n      </clr-date-container>\r\n      <clr-select-container *ngIf=\"isType(column, 'division-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <select\r\n          clrSelect\r\n          *ngIf=\"constants\"\r\n          [formControl]=\"formArray.controls[i]\"\r\n        >\r\n          <option\r\n            [value]=\"division.label\"\r\n            *ngFor=\"let division of constants['divisions']\"\r\n          >\r\n            {{ division.label }}</option\r\n          >\r\n        </select>\r\n      </clr-select-container>\r\n      <clr-input-container *ngIf=\"isType(column, 'text')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input clrInput type=\"text\" [formControl]=\"formArray.controls[i]\" />\r\n      </clr-input-container>\r\n      <clr-input-container *ngIf=\"isType(column, 'number')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input clrInput type=\"number\" [formControl]=\"formArray.controls[i]\" />\r\n      </clr-input-container>\r\n      <clr-checkbox-container *ngIf=\"isType(column, 'tag-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <clr-checkbox-wrapper *ngFor=\"let tag of column.tags; index as j\">\r\n          <input\r\n            type=\"checkbox\"\r\n            clrCheckbox\r\n            [formControl]=\"getCheckboxControl(i, j, formArray)\"\r\n          />\r\n          <label>{{ tag.icon }} {{ tag.label }}</label>\r\n        </clr-checkbox-wrapper>\r\n      </clr-checkbox-container>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"addModalCancel()\">\r\n      Cancel\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn\"\r\n      (click)=\"addAnother()\"\r\n      [disabled]=\"formArray.invalid\"\r\n    >\r\n      Add another\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-success\"\r\n      (click)=\"finishAddModal()\"\r\n      [disabled]=\"formArray.invalid\"\r\n    >\r\n      Add and finish\r\n    </button>\r\n  </div>\r\n</clr-modal>\r\n<clr-modal\r\n  #editModal\r\n  [(clrModalOpen)]=\"editModalOpened\"\r\n  *ngIf=\"editModalOpened\"\r\n>\r\n  <h3 class=\"modal-title\">Edit row</h3>\r\n  <div class=\"modal-body\">\r\n    <!-- <clr-alert\r\n      [clrAlertType]=\"'success'\"\r\n      [(clrAlertClosed)]=\"!showItemAddConfirmation\"\r\n    >\r\n      <clr-alert-item>\r\n        <span class=\"alert-text\">Item successfully added.</span>\r\n      </clr-alert-item>\r\n    </clr-alert> -->\r\n    <form\r\n      clrForm\r\n      [formGroup]=\"formGroup\"\r\n      *ngFor=\"let column of interface.columns; index as i\"\r\n      clrLayout=\"vertical\"\r\n    >\r\n      <clr-date-container *ngIf=\"isType(column, 'date-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input type=\"date\" clrDate [formControl]=\"formArray.controls[i]\" />\r\n      </clr-date-container>\r\n      <clr-select-container *ngIf=\"isType(column, 'division-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <select\r\n          clrSelect\r\n          *ngIf=\"constants\"\r\n          [formControl]=\"formArray.controls[i]\"\r\n        >\r\n          <option\r\n            [value]=\"division.label\"\r\n            *ngFor=\"let division of constants['divisions']\"\r\n          >\r\n            {{ division.label }}</option\r\n          >\r\n        </select>\r\n      </clr-select-container>\r\n      <clr-input-container *ngIf=\"isType(column, 'text')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input clrInput type=\"text\" [formControl]=\"formArray.controls[i]\" />\r\n      </clr-input-container>\r\n      <clr-input-container *ngIf=\"isType(column, 'number')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <input clrInput type=\"number\" [formControl]=\"formArray.controls[i]\" />\r\n      </clr-input-container>\r\n      <clr-checkbox-container *ngIf=\"isType(column, 'tag-select')\">\r\n        <label for=\"\">{{ column[\"label\"] }}</label>\r\n        <clr-checkbox-wrapper *ngFor=\"let tag of column.tags; index as j\">\r\n          <input\r\n            type=\"checkbox\"\r\n            clrCheckbox\r\n            *ngIf=\"editModalOpened\"\r\n            [formControl]=\"getCheckboxControl(i, j, formArray)\"\r\n          />\r\n          <label>{{ tag.icon }} {{ tag.label }}</label>\r\n        </clr-checkbox-wrapper>\r\n      </clr-checkbox-container>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"editModalCancel()\">\r\n      Cancel\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-success\"\r\n      (click)=\"finishEdits()\"\r\n      [disabled]=\"formArray.invalid\"\r\n    >\r\n      Apply\r\n    </button>\r\n  </div>\r\n</clr-modal>\r\n","import {\r\n  SimpleInputInterface,\r\n  Input as InputInterface,\r\n} from './../../../interfaces/sections';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { AbstractSection } from '../abstract-section/abstract-section.component';\r\nimport { FormArray, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ReportService } from 'src/app/services/report.service';\r\n\r\n@Component({\r\n  selector: 'simple-input',\r\n  templateUrl: './simple-input.component.html',\r\n  styleUrls: ['./simple-input.component.css'],\r\n})\r\nexport class SimpleInputSection extends AbstractSection implements OnInit {\r\n  formArray = new FormArray([], { updateOn: 'blur' });\r\n  formGroup: FormGroup;\r\n  formLabels: string[] = [];\r\n  inputs: Array<Object>;\r\n  @Input() interface: SimpleInputInterface;\r\n  @Input() meta: boolean;\r\n  @Input() constants: Object;\r\n  @Output() sectionChanged = new EventEmitter<Object>();\r\n\r\n  constructor(private _ReportService: ReportService) {\r\n    super();\r\n  }\r\n\r\n  hasTag(tagArray: Object[], tagObj) {\r\n    let tagLabels: string[] = [];\r\n    if (tagArray) {\r\n      tagArray.forEach((tag) => {\r\n        tagLabels.push(tag['label']);\r\n      });\r\n    }\r\n\r\n    return tagLabels.includes(tagObj['label']);\r\n  }\r\n\r\n  convertISOtoTraditional(isoString: string) {\r\n    let date = new Date(isoString);\r\n    let year = date.getFullYear();\r\n    let month = (date.getMonth() + 1).toString();\r\n    let dt = date.getDate().toString();\r\n\r\n    if (date.getDate() < 10) {\r\n      dt = '0' + dt.toString();\r\n    }\r\n    if (date.getMonth() < 10) {\r\n      month = '0' + month;\r\n    }\r\n    let result = month + '/' + dt + '/' + year;\r\n    console.log('Converting: ' + isoString + ' to ' + result);\r\n    return result;\r\n  }\r\n\r\n  convertTraditionalToISO(inputString: string) {\r\n    let stringPieces = inputString.split('/');\r\n    let monthNum: number = +stringPieces[0] - 1;\r\n    let dateNum: number = +stringPieces[1];\r\n    let yearNum: number = +stringPieces[2];\r\n    let date = new Date();\r\n    date.setMonth(monthNum);\r\n    date.setDate(dateNum);\r\n    date.setFullYear(yearNum);\r\n    let result = date.toISOString();\r\n    console.log('Converting: ' + inputString + ' to ' + result);\r\n    return result;\r\n  }\r\n\r\n  buildForm() {\r\n    if (!this.inputs) {\r\n      console.error('No inputs were found for ' + this.title);\r\n      return;\r\n    }\r\n    this.inputs.forEach((input: InputInterface, index) => {\r\n      this.formLabels.push(input['label']);\r\n\r\n      //if saved data exists, fill the form with that to start\r\n      if (this.interface.value) {\r\n        let savedData = this.interface.value;\r\n        if (input['type'] === 'tag-select') {\r\n          let checkboxArray = new FormArray([]);\r\n          console.log(savedData);\r\n\r\n          input.tags.forEach((tag) => {\r\n            checkboxArray.push(\r\n              savedData[index]\r\n                ? new FormControl(this.hasTag(savedData[index]['tags'], tag))\r\n                : new FormControl()\r\n            );\r\n          });\r\n          this.formArray.push(checkboxArray);\r\n        } else if (input['type'] === 'month-select') {\r\n          this.formArray.push(\r\n            //push the current date\r\n            new FormControl(savedData[index])\r\n          );\r\n        } else if (input['typle'] === 'date-select') {\r\n          this.formArray.push(\r\n            new FormControl(this.convertISOtoTraditional(savedData[index]))\r\n          );\r\n        } else {\r\n          this.formArray.push(new FormControl(savedData[index]));\r\n        }\r\n      } else {\r\n        if (input['type'] === 'tag-select') {\r\n          let checkboxArray = new FormArray([]);\r\n          input.tags.forEach((tag) => {\r\n            checkboxArray.push(new FormControl(null));\r\n          });\r\n          this.formArray.push(checkboxArray);\r\n        } else if (input['type'] === 'month-select') {\r\n          let currentDate = new Date();\r\n          this.formArray.push(\r\n            //push the current date\r\n            new FormControl(currentDate.toISOString())\r\n          );\r\n        } else {\r\n          this.formArray.push(new FormControl(null));\r\n        }\r\n      }\r\n    });\r\n    console.log(this.formArray);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.inputs = (this.interface as SimpleInputInterface).inputs;\r\n    this.buildForm();\r\n    this.formGroup = new FormGroup(\r\n      {\r\n        array: this.formArray,\r\n      },\r\n      { updateOn: 'blur' }\r\n    );\r\n    this.formArray.valueChanges.subscribe((rawFormData: Object[]) => {\r\n      if (this.interface.type === 'meta' && this._ReportService.report) {\r\n        this.interface.inputs.forEach((inputObj: InputInterface, index) => {\r\n          let link = inputObj.link;\r\n\r\n          console.log(link);\r\n          if (link === 'coverageDate') {\r\n            this._ReportService.setCoverageDate(this.formArray.value[index]);\r\n          } else if (link === 'additionalInfo') {\r\n            this._ReportService.setAdditionalInfo(this.formArray.value[index]);\r\n          } else if (link === 'title') {\r\n            this._ReportService.setTitle(this.formArray.value[index]);\r\n          } else if (link === 'subject') {\r\n            this._ReportService.setSubject(this.formArray.value[index]);\r\n          } else if (link === 'tags') {\r\n            this._ReportService.setTags(this.formArray.value[index]);\r\n          }\r\n        });\r\n      }\r\n\r\n      //properly add tags from newData\r\n      console.log(rawFormData);\r\n      let processedVals: Object[] = [];\r\n      rawFormData.forEach((obj, index) => {\r\n        let type = this.interface.inputs[index].type;\r\n        if (type === 'tag-select') {\r\n          let checkTags: Object[] = [];\r\n          let tags = this.interface.inputs[index].tags;\r\n          (obj as Object[]).forEach((checked: boolean, tagIndex) => {\r\n            if (checked) {\r\n              checkTags.push(tags[tagIndex]);\r\n            }\r\n          });\r\n          processedVals.push({ tags: checkTags });\r\n        } else if (type === 'date-select') {\r\n          processedVals.push(\r\n            this.convertTraditionalToISO(rawFormData[index] as string)\r\n          );\r\n        } else {\r\n          processedVals.push(rawFormData[index]);\r\n        }\r\n      });\r\n      console.log(processedVals);\r\n      this.interface.value = processedVals;\r\n      this.sectionChanged.emit(this.interface);\r\n    });\r\n  }\r\n\r\n  getConstant(constantName: string) {\r\n    return ['a', 'b', 'c'];\r\n  }\r\n}\r\n","<h1>{{ interface.title }}</h1>\r\n<h5 class=\"subtitle\" *ngIf=\"interface.subtitle\">{{ interface.subtitle }}</h5>\r\n<form\r\n  clrForm\r\n  [formGroup]=\"formGroup\"\r\n  *ngFor=\"let input of inputs; index as i\"\r\n  clrLayout=\"vertical\"\r\n>\r\n  <clr-date-container *ngIf=\"isType(input, 'date-select')\">\r\n    <label for=\"\">{{ input[\"label\"] }}</label>\r\n    <input type=\"date\" clrDate [formControl]=\"formArray.controls[i]\" />\r\n  </clr-date-container>\r\n  <clr-select-container *ngIf=\"isType(input, 'division-select')\">\r\n    <label for=\"\">{{ input[\"label\"] }}</label>\r\n    <select clrSelect [formControl]=\"formArray.controls[i]\">\r\n      <option\r\n        [value]=\"division.label\"\r\n        *ngFor=\"let division of getConstant('divisions')\"\r\n      >\r\n        {{ division.label }}</option\r\n      >\r\n    </select>\r\n  </clr-select-container>\r\n  <month-select\r\n    *ngIf=\"isType(input, 'month-select')\"\r\n    [label]=\"input['label']\"\r\n    [formControl]=\"formArray.controls[i]\"\r\n  >\r\n  </month-select>\r\n  <clr-input-container *ngIf=\"isType(input, 'text')\">\r\n    <label for=\"\">{{ input[\"label\"] }}</label>\r\n    <input clrInput type=\"text\" [formControl]=\"formArray.controls[i]\" />\r\n  </clr-input-container>\r\n  <clr-input-container *ngIf=\"isType(input, 'number')\">\r\n    <label for=\"\">{{ input[\"label\"] }}</label>\r\n    <input clrInput type=\"number\" [formControl]=\"formArray.controls[i]\" />\r\n  </clr-input-container>\r\n  <clr-checkbox-container *ngIf=\"isType(input, 'tag-select')\">\r\n    <label for=\"\">{{ input[\"label\"] }}</label>\r\n    <clr-checkbox-wrapper *ngFor=\"let tag of input.tags; index as j\">\r\n      <input\r\n        type=\"checkbox\"\r\n        clrCheckbox\r\n        [formControl]=\"getCheckboxControl(i, j, formArray)\"\r\n      />\r\n      <label>{{ tag.icon }} {{ tag.label }}</label>\r\n    </clr-checkbox-wrapper>\r\n  </clr-checkbox-container>\r\n  <clr-textarea-container *ngIf=\"isType(input, 'textarea')\">\r\n    <label>{{ input[\"label\"] }}</label>\r\n    <textarea\r\n      clrTextarea\r\n      name=\"description\"\r\n      [formControl]=\"formArray.controls[i]\"\r\n    ></textarea>\r\n  </clr-textarea-container>\r\n</form>\r\n","import { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ConstantService } from './../../services/constant.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormArray,\r\n  AbstractControl,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ClrLoadingState } from '@clr/angular';\r\nimport { ReportService } from 'src/app/services/report.service';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { TemplateService } from '../../services/template.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport { User } from 'src/app/interfaces/user';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css'],\r\n})\r\nexport class StartComponent implements OnInit {\r\n  detailState = false;\r\n\r\n  //modal booleans\r\n  editVisible: boolean = false;\r\n  copyVisible: boolean = false;\r\n  deleteVisible: boolean = false;\r\n  exportVisible: boolean = false;\r\n  filterVisible: boolean = false;\r\n\r\n  selectedTemplateName: string;\r\n  newTemplateName: string = '';\r\n\r\n  //alert booleans\r\n  emailSent: boolean = false;\r\n\r\n  //from UserService\r\n  user: Observable<User> = this._UserService.getUserObservable();\r\n  showUnverifiedAlert: boolean;\r\n  reports: Report[] = [];\r\n  selectedReport: Report;\r\n\r\n  templateModalVisible: boolean = false;\r\n  tempDuplicateVisible: boolean = false;\r\n\r\n  reportCount: number = -1;\r\n  selectedReports: Report[] = [];\r\n\r\n  _sizeLimit: string = '10';\r\n\r\n  _constants: Object;\r\n\r\n  //from TemplateService\r\n  templates: Observable<Map<string, Report>>;\r\n\r\n  //for the filter tool\r\n  filterGroup: FormGroup;\r\n  selectedTemplates: string[] = [];\r\n  selectedBranches: string[] = [];\r\n\r\n  //button loading states\r\n  templateLoadStatuses: ClrLoadingState[];\r\n  deleteLoading: ClrLoadingState;\r\n  filterLoading: ClrLoadingState = ClrLoadingState.DEFAULT;\r\n  magicLoading: ClrLoadingState = ClrLoadingState.DEFAULT;\r\n  templateDupStatus: ClrLoadingState = ClrLoadingState.DEFAULT;\r\n\r\n  constructor(\r\n    public _TemplateService: TemplateService,\r\n    public _ReportService: ReportService,\r\n    private _UserService: UserService,\r\n    private _Router: Router,\r\n    private _clipboardService: ClipboardService,\r\n    private fb: FormBuilder,\r\n    private constantService: ConstantService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user.subscribe((user) => {\r\n      if (user) {\r\n        this.showUnverifiedAlert = !user.emailVerified;\r\n        if (user.role === 'admin') {\r\n          //then load all reports, within quantity limit\r\n          if (this._sizeLimit !== 'all') {\r\n            this._ReportService\r\n              .fetchAllReportsWithLimit(+this._sizeLimit)\r\n              .then((reports) => {\r\n                this.reports = reports;\r\n                console.log(reports);\r\n              })\r\n              .catch(() => {\r\n                console.error('Could not fetch reports for ' + user.email);\r\n              });\r\n          } else {\r\n            this._ReportService\r\n              .fetchAllReports()\r\n              .then((reports) => {\r\n                this.reports = reports;\r\n                console.log(reports);\r\n              })\r\n              .catch(() => {\r\n                console.error('Could not fetch reports for ' + user.email);\r\n              });\r\n          }\r\n        } else {\r\n          if (this._sizeLimit !== 'all') {\r\n            this._ReportService\r\n              .fetchReportsByBranchWithLimit(user.branch, +this._sizeLimit)\r\n              .then((reports) => {\r\n                this.reports = reports;\r\n                console.log(reports);\r\n              })\r\n              .catch(() => {\r\n                console.error('Could not fetch reports for ' + user.email);\r\n              });\r\n          } else {\r\n            this._ReportService\r\n              .fetchReportsByBranch(user.branch)\r\n              .then((reports) => {\r\n                this.reports = reports;\r\n                console.log(reports);\r\n              })\r\n              .catch(() => {\r\n                console.error('Could not fetch reports for ' + user.email);\r\n              });\r\n          }\r\n        }\r\n        this.getReportCount().then((count) => {\r\n          this.reportCount = count;\r\n        });\r\n      }\r\n    });\r\n    this.templates = this._TemplateService.templateObservable;\r\n\r\n    //attach loading statuses to the templates in the 'new report' dropdown\r\n    this.templateLoadStatuses = [];\r\n    this._TemplateService.templateNames.forEach(() => {\r\n      this.templateLoadStatuses.push(ClrLoadingState.DEFAULT);\r\n    });\r\n\r\n    //subscribe to constants\r\n    this.constantService.constants.subscribe((constObj) => {\r\n      this._constants = constObj;\r\n    });\r\n    this.filterGroup = this.fb.group({\r\n      idSearch: [''],\r\n      completionStatus: ['All'],\r\n      template: ['All'],\r\n      authorSearch: [''],\r\n      coverageFrom: [''],\r\n      coverageTo: [''],\r\n      branch: ['All'],\r\n    });\r\n  }\r\n\r\n  get sizeLimit() {\r\n    return this._sizeLimit;\r\n  }\r\n\r\n  getReportCount(): Promise<number> {\r\n    if (this._UserService.getUserSnapshot().role === 'admin') {\r\n      return this._ReportService.getFullReportCount();\r\n    } else {\r\n      return this._ReportService.getReportCountByBranch(\r\n        this._UserService.getUserSnapshot().branch\r\n      );\r\n    }\r\n  }\r\n\r\n  set sizeLimit(newLimit: string) {\r\n    this._sizeLimit = newLimit;\r\n    let user = this._UserService.getUserSnapshot();\r\n    this.showUnverifiedAlert = !user.emailVerified;\r\n    if (user.role === 'admin') {\r\n      //then load all reports, within quantity limit\r\n      if (this._sizeLimit !== 'all') {\r\n        this._ReportService\r\n          .fetchAllReportsWithLimit(+this._sizeLimit)\r\n          .then((reports) => {\r\n            this.reports = reports;\r\n            console.log(reports);\r\n          })\r\n          .catch(() => {\r\n            console.error('Could not fetch reports for ' + user.email);\r\n          });\r\n      } else {\r\n        this._ReportService\r\n          .fetchAllReports()\r\n          .then((reports) => {\r\n            this.reports = reports;\r\n            console.log(reports);\r\n          })\r\n          .catch(() => {\r\n            console.error('Could not fetch reports for ' + user.email);\r\n          });\r\n      }\r\n    } else {\r\n      if (this._sizeLimit !== 'all') {\r\n        this._ReportService\r\n          .fetchReportsByBranchWithLimit(user.branch, +this._sizeLimit)\r\n          .then((reports) => {\r\n            this.reports = reports;\r\n            console.log(reports);\r\n          })\r\n          .catch(() => {\r\n            console.error('Could not fetch reports for ' + user.email);\r\n          });\r\n      } else {\r\n        this._ReportService\r\n          .fetchReportsByBranch(user.branch)\r\n          .then((reports) => {\r\n            this.reports = reports;\r\n            console.log(reports);\r\n          })\r\n          .catch(() => {\r\n            console.error('Could not fetch reports for ' + user.email);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  showExport(report: Report) {\r\n    this.selectedReport = report;\r\n    this.exportVisible = true;\r\n  }\r\n  hideExport() {\r\n    this.exportVisible = false;\r\n  }\r\n\r\n  isHidden(templateID: string) {\r\n    let templates = this._TemplateService.templateSnapshot;\r\n    if (templates && templates.get(templateID)) {\r\n      return templates.get(templateID).hidden;\r\n    } else return false;\r\n  }\r\n\r\n  duplicateReport(report: Report) {\r\n    console.log(report.id);\r\n    this._ReportService.duplicateReport(report.id).then(\r\n      (newID) => {\r\n        this._ReportService\r\n          .openReport(newID)\r\n          .then(() => {\r\n            this._Router.navigate(['report', newID, 0]);\r\n          })\r\n          .catch((reason) => {\r\n            console.error(\r\n              'Error opening new report with ID ' + newID + ': ' + reason\r\n            );\r\n          });\r\n      },\r\n      () => {\r\n        console.error('Error duplicating report ' + report.id);\r\n      }\r\n    );\r\n  }\r\n  showCopy(report: Report) {\r\n    this.selectedReport = report;\r\n    this.copyVisible = true;\r\n  }\r\n  hideCopy() {\r\n    this.copyVisible = false;\r\n  }\r\n\r\n  showFilterModal() {\r\n    console.log('Showing filter modal');\r\n\r\n    this.filterVisible = true;\r\n  }\r\n\r\n  applyFilter(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.refreshReports().then(() => {\r\n        let result = this.reports;\r\n        let filters = this.filterGroup.value;\r\n        if (filters.idSearch && filters.idSearch.length > 0) {\r\n          result = result.filter((report) =>\r\n            report.id.includes(filters.idSearch)\r\n          );\r\n        }\r\n        if (filters.completionStatus && filters.completionStatus !== 'All') {\r\n          result = result.filter(\r\n            (report) => report.completionStatus === filters.completionStatus\r\n          );\r\n        }\r\n        if (filters.template && filters.template !== 'All') {\r\n          result = result.filter(\r\n            (report) => report.templateID === filters.template\r\n          );\r\n        }\r\n        if (filters.authorSearch && filters.authorSearch.length > 0) {\r\n          result = result.filter(\r\n            (report) =>\r\n              report.author && report.author.includes(filters.authorSearch)\r\n          );\r\n        }\r\n        if (filters.branch && filters.branch !== 'All') {\r\n          result = result.filter(\r\n            (report) => report.branch && report.branch === filters.branch\r\n          );\r\n        }\r\n        if (filters.completionStatus && filters.completionStatus !== 'All') {\r\n          result = result.filter(\r\n            (report) =>\r\n              report.completionStatus &&\r\n              report.completionStatus === filters.completionStatus\r\n          );\r\n        }\r\n        if (filters.coverageFrom && filters.coverageFrom.length > 0) {\r\n          result = result.filter(\r\n            (report) =>\r\n              report.coverageDate &&\r\n              report.coverageDate >=\r\n                this.convertTraditionalToISO(filters.coverageFrom)\r\n          );\r\n        }\r\n        if (filters.coverageTo && filters.coverageTo.length > 0) {\r\n          result = result.filter(\r\n            (report) =>\r\n              report.coverageDate &&\r\n              report.coverageDate <=\r\n                this.convertTraditionalToISO(filters.coverageTo)\r\n          );\r\n        }\r\n        this.reports = result;\r\n        console.log(result);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  refreshReports(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (this._UserService.getUserSnapshot().role === 'admin') {\r\n        //then load all reports, within quantity limit\r\n        if (this._sizeLimit !== 'all') {\r\n          this._ReportService\r\n            .fetchAllReportsWithLimit(+this._sizeLimit)\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n              resolve();\r\n            })\r\n            .catch(() => {\r\n              console.error(\r\n                'Could not fetch reports for ' +\r\n                  this._UserService.getUserSnapshot().email\r\n              );\r\n              reject();\r\n            });\r\n        } else {\r\n          this._ReportService\r\n            .fetchAllReports()\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n              resolve();\r\n            })\r\n            .catch(() => {\r\n              console.error(\r\n                'Could not fetch reports for ' +\r\n                  this._UserService.getUserSnapshot().email\r\n              );\r\n              reject();\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  convertTraditionalToISO(inputString: string) {\r\n    if (!inputString) {\r\n      return null;\r\n    }\r\n    let stringPieces = inputString.split('/');\r\n    if (stringPieces.length !== 3) {\r\n      console.warn('Invalid date: ' + inputString);\r\n      return null;\r\n    }\r\n    let monthNum: number = +stringPieces[0] - 1;\r\n    let dateNum: number = +stringPieces[1];\r\n    let yearNum: number = +stringPieces[2];\r\n    let date = new Date();\r\n    date.setMonth(monthNum);\r\n    date.setDate(dateNum);\r\n    date.setFullYear(yearNum);\r\n    let result = date.toISOString();\r\n    console.log('Converting: ' + inputString + ' to ' + result);\r\n    return result;\r\n  }\r\n\r\n  getTemplateCBArray(index: number) {\r\n    if (!(this.filterGroup.get('templateCBs') as FormArray)) {\r\n      return null;\r\n    }\r\n    return (this.filterGroup.get('templatesCBs') as FormArray).controls[index];\r\n  }\r\n\r\n  getBranchCBArray(index: number) {\r\n    if (!this.filterGroup.get('branchCBs')) {\r\n      return null;\r\n    }\r\n    return (this.filterGroup.get('branchCBs') as FormArray).controls[index];\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filterGroup = this.fb.group({\r\n      idSearch: [''],\r\n      completionStatus: ['All'],\r\n      template: ['All'],\r\n      authorSearch: [''],\r\n      coverageFrom: [''],\r\n      coverageTo: [''],\r\n      branch: ['All'],\r\n    });\r\n  }\r\n\r\n  finishFilterModal() {\r\n    this.filterLoading = ClrLoadingState.LOADING;\r\n    console.log(this.filterGroup.value);\r\n    this.applyFilter()\r\n      .then(() => {\r\n        this.filterLoading = ClrLoadingState.SUCCESS;\r\n        this.hideFilterModal();\r\n      })\r\n      .catch((reason) => {\r\n        console.error('Filter application failed: ' + reason);\r\n        this.filterLoading = ClrLoadingState.ERROR;\r\n      });\r\n  }\r\n\r\n  hideFilterModal() {\r\n    this.filterVisible = false;\r\n  }\r\n\r\n  deleteReport(report: Report) {\r\n    this.deleteLoading = ClrLoadingState.LOADING;\r\n    this._ReportService.deleteReport(report).then(() => {\r\n      let user = this._UserService.getUserSnapshot();\r\n      if (user.role === 'admin') {\r\n        //then load all reports, within quantity limit\r\n        if (this._sizeLimit !== 'all') {\r\n          this._ReportService\r\n            .fetchAllReportsWithLimit(+this._sizeLimit)\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n            })\r\n            .catch(() => {\r\n              console.error('Could not fetch reports for ' + user.email);\r\n            });\r\n        } else {\r\n          this._ReportService\r\n            .fetchAllReports()\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n            })\r\n            .catch(() => {\r\n              console.error('Could not fetch reports for ' + user.email);\r\n            });\r\n        }\r\n      } else {\r\n        if (this._sizeLimit !== 'all') {\r\n          this._ReportService\r\n            .fetchReportsByBranchWithLimit(user.branch, +this._sizeLimit)\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n            })\r\n            .catch(() => {\r\n              console.error('Could not fetch reports for ' + user.email);\r\n            });\r\n        } else {\r\n          this._ReportService\r\n            .fetchReportsByBranch(user.branch)\r\n            .then((reports) => {\r\n              this.reports = reports;\r\n              console.log(reports);\r\n            })\r\n            .catch(() => {\r\n              console.error('Could not fetch reports for ' + user.email);\r\n            });\r\n        }\r\n      }\r\n      this.deleteLoading = ClrLoadingState.SUCCESS;\r\n      this.deleteVisible = false;\r\n    });\r\n  }\r\n  showDelete(report: Report) {\r\n    this.selectedReport = report;\r\n    this.deleteVisible = true;\r\n  }\r\n\r\n  copyMagic(reportList: Report[]) {\r\n    this.magicLoading = ClrLoadingState.LOADING;\r\n    this._ReportService.getMagicString(reportList).then((stringResult) => {\r\n      console.log(stringResult);\r\n      this._clipboardService.copyFromContent(stringResult);\r\n      this.magicLoading = ClrLoadingState.SUCCESS;\r\n      alert('🔮 Magic string copied to clipboard.');\r\n    });\r\n  }\r\n\r\n  hideDelete() {\r\n    this.deleteVisible = false;\r\n  }\r\n\r\n  isUnfinished(report: Report) {\r\n    if (report) return report.completionStatus === 'incomplete' ? true : false;\r\n    else return false;\r\n  }\r\n\r\n  resendVerification() {\r\n    this._UserService.sendVerificationEmail().then(() => {\r\n      this.emailSent = true;\r\n      this.showUnverifiedAlert = false;\r\n    });\r\n  }\r\n\r\n  createReport(templateName: string, dropdownIndex: number) {\r\n    this.templateLoadStatuses[dropdownIndex] = ClrLoadingState.LOADING;\r\n    this._ReportService.createNewReport(templateName).then(\r\n      (newID) => {\r\n        this._ReportService\r\n          .openReport(newID)\r\n          .then(() => {\r\n            console.log('Created report: ');\r\n            console.log(this._ReportService.report);\r\n            this._Router.navigate(['report', newID, 0]);\r\n          })\r\n          .catch((reason) => {\r\n            console.error(\r\n              'Error opening new report with ID ' + newID + ': ' + reason\r\n            );\r\n          });\r\n      },\r\n      () => {\r\n        console.error(\r\n          'Error creating new report with template ' + templateName\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  navigate(report: Report) {\r\n    console.log('Opening: ' + report.id);\r\n    this._Router.navigate(['report', report.id, 0]);\r\n  }\r\n\r\n  json(obj) {\r\n    return JSON.stringify(obj);\r\n  }\r\n\r\n  get isAdmin() {\r\n    let user = this._UserService.getUserSnapshot();\r\n    if (user && user.role === 'admin') {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  showTemplateModal() {\r\n    console.log(this._TemplateService.templateNames);\r\n    this.templateModalVisible = true;\r\n  }\r\n  hideTemplateModal() {\r\n    this.templateModalVisible = false;\r\n  }\r\n  showDuplicateTemplate(selectedTemplate) {\r\n    this.selectedTemplateName = selectedTemplate;\r\n    this.tempDuplicateVisible = true;\r\n  }\r\n  hideDuplicateTemplate() {\r\n    this.tempDuplicateVisible = false;\r\n  }\r\n  duplicateTemplate(selectedTemplateName, newTemplateName) {\r\n    this.templateDupStatus = ClrLoadingState.LOADING;\r\n    this._TemplateService\r\n      .duplicateTemplate(selectedTemplateName, newTemplateName)\r\n      .then(() => {\r\n        this.templateDupStatus = ClrLoadingState.SUCCESS;\r\n        this.tempDuplicateVisible = false;\r\n      });\r\n  }\r\n  deleteTemplate(templateID) {\r\n    this._TemplateService.deleteTemplate(templateID).then(\r\n      () => {\r\n        console.log('Success');\r\n        console.log(this._TemplateService.templateNames);\r\n      },\r\n      (reason) => {\r\n        console.log('Error ' + reason);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"clr-row clr-justify-content-center\" style=\"width: 100vw;\">\r\n  <div class=\"clr-col-md-6 alert alert-warning\" *ngIf=\"showUnverifiedAlert\">\r\n    <div class=\"alert-items\">\r\n      <div class=\"alert-item static\" role=\"alert\">\r\n        <div class=\"alert-icon-wrapper\">\r\n          <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\r\n        </div>\r\n        <span class=\"alert-text\">\r\n          In order to continue, please verify your account using the link\r\n          emailed to you, then refresh this page. If you don't receive a\r\n          verification email (check your spam),\r\n          <a href=\"javascript://\" (click)=\"resendVerification()\"\r\n            >click here to resend one</a\r\n          >.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"clr-col-md-6 alert\" *ngIf=\"emailSent\">\r\n    <div class=\"alert-items\">\r\n      <div class=\"alert-item static\" role=\"alert\">\r\n        <div class=\"alert-icon-wrapper\">\r\n          <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\r\n        </div>\r\n        <span class=\"alert-text\">\r\n          A new email has been sent to you.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"clr-col clr-col-md-10 clr-col-xl-8\"\r\n    *ngIf=\"(user | async)?.emailVerified\"\r\n  >\r\n    <div class=\"clr-row clr-justify-content-between clr-align-items-end\">\r\n      <h1 *ngIf=\"!isAdmin\">Reports for {{ (user | async)?.branch }}</h1>\r\n      <h1 *ngIf=\"isAdmin\">Reports for all branches</h1>\r\n      <button class=\"btn\" (click)=\"showTemplateModal()\" *ngIf=\"isAdmin\">\r\n        <clr-icon shape=\"scroll\"></clr-icon> Templates\r\n      </button>\r\n      <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\r\n        <button class=\"btn btn-primary\" clrDropdownTrigger>\r\n          <clr-icon shape=\"plus\"></clr-icon> New report\r\n        </button>\r\n        <clr-dropdown-menu clrPosition=\"bottom-right\" *clrIfOpen>\r\n          <ng-container\r\n            *ngFor=\"\r\n              let template of _TemplateService.visibleTemplates;\r\n              index as i\r\n            \"\r\n          >\r\n            <button\r\n              clrDropdownItem\r\n              [clrLoading]=\"templateLoadStatuses[i]\"\r\n              (click)=\"createReport(template.templateID, i)\"\r\n            >\r\n              {{ template.templateID }}\r\n            </button>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"_TemplateService.visibleTemplates.length < 1\"\r\n            ><clr-icon shape=\"exclamation-triangle\"></clr-icon> No templates are\r\n            available right now.</ng-container\r\n          >\r\n        </clr-dropdown-menu>\r\n      </clr-dropdown>\r\n    </div>\r\n    <div class=\"clr-row\">\r\n      <clr-datagrid style=\"width: 100%;\" [(clrDgSelected)]=\"selectedReports\">\r\n        <clr-dg-placeholder>No reports found.</clr-dg-placeholder>\r\n        <clr-dg-column>ID</clr-dg-column>\r\n        <clr-dg-column>Submitted</clr-dg-column>\r\n        <clr-dg-column>Template</clr-dg-column>\r\n        <clr-dg-column>Author</clr-dg-column>\r\n        <clr-dg-column>Coverage date</clr-dg-column>\r\n\r\n        <clr-dg-action-bar>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-sm btn-secondary\"\r\n            (click)=\"showFilterModal()\"\r\n          >\r\n            <clr-icon shape=\"filter\"></clr-icon> Filter reports\r\n          </button>\r\n          <button\r\n            *ngIf=\"selectedReports.length > 0\"\r\n            type=\"button\"\r\n            class=\"btn btn-sm btn-magic\"\r\n            (click)=\"copyMagic(selectedReports)\"\r\n            [clrLoading]=\"magicLoading\"\r\n          >\r\n            <clr-icon shape=\"wand\"></clr-icon> Copy magic for\r\n            {{ selectedReports.length }} reports\r\n          </button>\r\n        </clr-dg-action-bar>\r\n\r\n        <clr-dg-row\r\n          *clrDgItems=\"let report of reports; index as i\"\r\n          [clrDgItem]=\"report\"\r\n        >\r\n          <clr-dg-action-overflow>\r\n            <button class=\"action-item\" (click)=\"navigate(report)\">\r\n              <clr-icon shape=\"login\"></clr-icon> Open report\r\n            </button>\r\n            <button class=\"action-item\" (click)=\"showCopy(report)\">\r\n              <clr-icon shape=\"copy\"></clr-icon> Duplicate to new report\r\n            </button>\r\n            <button\r\n              *ngIf=\"!isUnfinished(report) && isAdmin\"\r\n              class=\"action-item\"\r\n              (click)=\"showDelete(report)\"\r\n            >\r\n              <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon> Delete\r\n              report\r\n              <span class=\"badge badge-light-blue\">Admin</span>\r\n            </button>\r\n            <button\r\n              *ngIf=\"isUnfinished(report)\"\r\n              class=\"action-item\"\r\n              (click)=\"showDelete(report)\"\r\n            >\r\n              <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon> Delete draft\r\n            </button>\r\n            <button class=\"action-item\" (click)=\"copyMagic([report])\">\r\n              <clr-icon shape=\"wand\"></clr-icon> Copy magic text\r\n            </button>\r\n          </clr-dg-action-overflow>\r\n          <clr-dg-cell (click)=\"navigate(report)\" class=\"clickable\">{{\r\n            report.id\r\n          }}</clr-dg-cell>\r\n          <clr-dg-cell (click)=\"navigate(report)\" class=\"clickable\"\r\n            >{{ report.submitDate | date: \"shortDate\"\r\n            }}<span *ngIf=\"!report.submitDate\"\r\n              ><em>Unsubmitted</em></span\r\n            ></clr-dg-cell\r\n          >\r\n\r\n          <clr-dg-cell (click)=\"navigate(report)\" class=\"clickable\"\r\n            >{{ report.templateID }}\r\n            <span *ngIf=\"isUnfinished(report)\" class=\"label label-warning\"\r\n              >Draft</span\r\n            >\r\n          </clr-dg-cell>\r\n\r\n          <clr-dg-cell (click)=\"navigate(report)\" class=\"clickable\">{{\r\n            report.author\r\n          }}</clr-dg-cell>\r\n          <clr-dg-cell (click)=\"navigate(report)\" class=\"clickable\">{{\r\n            report.coverageDate | date: \"MMMM \t’yy\"\r\n          }}</clr-dg-cell>\r\n        </clr-dg-row>\r\n        <clr-dg-detail *clrIfDetail=\"let report\">\r\n          <clr-dg-detail-header>Report details</clr-dg-detail-header>\r\n          <clr-dg-detail-body>\r\n            <b>ID: </b> {{ report.id }} <br />\r\n            <b>Coverage date: </b> {{ report.coverageDate | date: \"MMMM \t’yy\" }}\r\n            <br />\r\n            <b>Submitted: </b> {{ report.submitDate | date: \"longDate\" }} <br />\r\n            <b>Author: </b> {{ report.author }} <br />\r\n            <b>Branch: </b> {{ report.branch }} <br />\r\n            <b>Page count: </b> {{ report.pageCount }} <br />\r\n            <b>Completion: </b> {{ report.completionStatus }} <br />\r\n            <b>Additional info: </b>{{ report.additionalInfo }} <br />\r\n          </clr-dg-detail-body>\r\n        </clr-dg-detail>\r\n        <clr-dg-footer\r\n          >Show\r\n          <select name=\"options\" [(ngModel)]=\"sizeLimit\">\r\n            <option value=\"10\">10</option>\r\n            <option value=\"30\">30</option>\r\n            <option value=\"100\">100</option>\r\n            <option value=\"all\">all</option>\r\n          </select>\r\n          reports | {{ reports.length }} of {{ reportCount }}</clr-dg-footer\r\n        >\r\n      </clr-datagrid>\r\n\r\n      <clr-modal [clrModalSize]=\"'sm'\" [(clrModalOpen)]=\"deleteVisible\">\r\n        <h3 class=\"modal-title\">\r\n          Are you sure you want to delete this report?\r\n        </h3>\r\n        <div class=\"modal-body\" *ngIf=\"selectedReport\">\r\n          <p>\r\n            <strong>Template: </strong>{{ selectedReport.templateID\r\n            }}<span\r\n              *ngIf=\"isUnfinished(selectedReport)\"\r\n              class=\"label label-warning\"\r\n              >Draft</span\r\n            >\r\n          </p>\r\n          <p>\r\n            <strong>Coverage date: </strong>{{ selectedReport.coverageDate }}\r\n          </p>\r\n          <p><strong>Author: </strong>{{ selectedReport.author }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline\" (click)=\"hideDelete()\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-danger\"\r\n            [clrLoading]=\"deleteLoading\"\r\n            (click)=\"deleteReport(selectedReport)\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </clr-modal>\r\n      <clr-modal\r\n        [clrModalSize]=\"'lg'\"\r\n        [(clrModalOpen)]=\"filterVisible\"\r\n        *ngIf=\"filterVisible\"\r\n      >\r\n        <h3 class=\"modal-title\">\r\n          Filter reports\r\n        </h3>\r\n        <div class=\"modal-body\">\r\n          <p class=\"p5\">\r\n            Note: all fields are optional. Empty filters are not applied.\r\n          </p>\r\n          <form clrForm clrLayout=\"compact\" [formGroup]=\"filterGroup\">\r\n            <clr-input-container>\r\n              <label>Report ID</label>\r\n              <input\r\n                clrInput\r\n                type=\"text\"\r\n                placeholder=\"All\"\r\n                formControlName=\"idSearch\"\r\n              />\r\n            </clr-input-container>\r\n            <clr-input-container>\r\n              <label>Author</label>\r\n              <input\r\n                clrInput\r\n                type=\"text\"\r\n                placeholder=\"All\"\r\n                formControlName=\"authorSearch\"\r\n              />\r\n            </clr-input-container>\r\n            <clr-date-container>\r\n              <label>Coverage date from</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                formControlName=\"coverageFrom\"\r\n                clrDate\r\n              />\r\n            </clr-date-container>\r\n            <clr-date-container>\r\n              <label>Coverage date to</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                formControlName=\"coverageTo\"\r\n                clrDate\r\n              />\r\n            </clr-date-container>\r\n            <clr-select-container>\r\n              <label>Completion status</label>\r\n              <select\r\n                clrSelect\r\n                name=\"options\"\r\n                formControlName=\"completionStatus\"\r\n              >\r\n                <option value=\"All\" selected=\"selected\">All</option>\r\n                <option value=\"complete\">Complete</option>\r\n                <option value=\"incomplete\">Incomplete (draft)</option>\r\n              </select>\r\n            </clr-select-container>\r\n            <clr-select-container clrInline *ngIf=\"filterVisible\">\r\n              <label>Template</label>\r\n              <select clrSelect formControlName=\"template\">\r\n                <option value=\"All\" selected=\"selected\">All</option>\r\n                <option\r\n                  *ngFor=\"\r\n                    let templateID of _TemplateService.templateNames;\r\n                    index as i\r\n                  \"\r\n                  [value]=\"templateID\"\r\n                  >{{ templateID }}</option\r\n                >\r\n              </select>\r\n            </clr-select-container>\r\n            <clr-select-container clrInline *ngIf=\"isAdmin\">\r\n              <label>Branch</label>\r\n              <select clrSelect formControlName=\"branch\">\r\n                <option value=\"All\" selected=\"selected\">All</option>\r\n                <option\r\n                  *ngFor=\"let branch of _constants['branches']; index as i\"\r\n                  [value]=\"branch\"\r\n                  >{{ branch }}</option\r\n                >\r\n              </select>\r\n            </clr-select-container>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline\"\r\n            (click)=\"clearFilters()\"\r\n          >\r\n            Clear filters\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            [clrLoading]=\"filterLoading\"\r\n            (click)=\"finishFilterModal()\"\r\n          >\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </clr-modal>\r\n      <clr-modal [clrModalSize]=\"'sm'\" [(clrModalOpen)]=\"copyVisible\">\r\n        <h3 class=\"modal-title\">Create a deplicate report?</h3>\r\n        <div class=\"modal-body\" *ngIf=\"selectedReport\">\r\n          <p>This will open the new report in the editor.</p>\r\n          <p>\r\n            <strong>Template: </strong>{{ selectedReport.templateID }}<br />\r\n            <strong>ID: </strong>{{ selectedReport.id }}<br />\r\n            <b>Submitted: </b>{{ selectedReport.submitDate | date\r\n            }}<span\r\n              *ngIf=\"isUnfinished(selectedReport)\"\r\n              class=\"label label-warning\"\r\n              >Draft</span\r\n            >\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline\" (click)=\"hideCopy()\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"duplicateReport(selectedReport)\"\r\n            [clrLoading]=\"templateDupStatus\"\r\n          >\r\n            Duplicate\r\n          </button>\r\n        </div>\r\n      </clr-modal>\r\n      <clr-modal [(clrModalOpen)]=\"templateModalVisible\">\r\n        <h3 class=\"modal-title\">\r\n          {{ _TemplateService.templateNames.length }} templates\r\n        </h3>\r\n        <div class=\"modal-body\">\r\n          <div\r\n            class=\"clr-row clr-align-items-center template-row\"\r\n            style=\"padding-left: 12px;\"\r\n            *ngFor=\"\r\n              let templateID of _TemplateService.templateNames;\r\n              index as i\r\n            \"\r\n          >\r\n            {{ templateID }}\r\n            <clr-dropdown>\r\n              <button\r\n                class=\"btn btn-link btn-sm btn-icon\"\r\n                style=\"padding: 0 12px 0 12px;\"\r\n                clrDropdownTrigger\r\n              >\r\n                <clr-icon shape=\"angle\" dir=\"down\"></clr-icon>\r\n              </button>\r\n              <clr-dropdown-menu clrPosition=\"top-left\" *clrIfOpen>\r\n                <label class=\"dropdown-header\" aria-hidden=\"true\"\r\n                  >Template actions</label\r\n                >\r\n                <div\r\n                  clrDropdownItem\r\n                  (click)=\"_TemplateService.openTemplate(templateID)\"\r\n                >\r\n                  <clr-icon\r\n                    shape=\"angle-double\"\r\n                    dir=\"right\"\r\n                    class=\"is-highlight\"\r\n                  ></clr-icon>\r\n                  Edit\r\n                </div>\r\n                <div\r\n                  clrDropdownItem\r\n                  (click)=\"showDuplicateTemplate(templateID)\"\r\n                >\r\n                  <clr-icon shape=\"copy\"></clr-icon>\r\n                  Duplicate as...\r\n                </div>\r\n                <div\r\n                  clrDropdownItem\r\n                  *ngIf=\"!isHidden(templateID); else showTempl\"\r\n                  (click)=\"_TemplateService.markHidden(templateID)\"\r\n                >\r\n                  <clr-icon shape=\"eye-hide\"></clr-icon>\r\n                  Hide from users\r\n                </div>\r\n                <ng-template #showTempl>\r\n                  <div\r\n                    clrDropdownItem\r\n                    (click)=\"_TemplateService.markVisible(templateID)\"\r\n                  >\r\n                    <clr-icon shape=\"eye\"></clr-icon>\r\n                    Show to users\r\n                  </div>\r\n                </ng-template>\r\n                <div clrDropdownItem (click)=\"deleteTemplate(templateID)\">\r\n                  <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                  Delete\r\n                </div>\r\n              </clr-dropdown-menu>\r\n            </clr-dropdown>\r\n          </div>\r\n          <div class=\"clr-row clr-justify-content-end\">\r\n            <button\r\n              class=\"btn btn-sm btn-link btn-icon\"\r\n              style=\"margin: 24px 0 0 0;\"\r\n              (click)=\"_TemplateService.newTemplate()\"\r\n            >\r\n              Create new\r\n              <clr-icon\r\n                shape=\"plus\"\r\n                dir=\"right\"\r\n                title=\"This will open a blank template in the builder.\"\r\n              ></clr-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline\"\r\n            (click)=\"hideTemplateModal()\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </clr-modal>\r\n      <clr-modal [clrModalSize]=\"'sm'\" [(clrModalOpen)]=\"tempDuplicateVisible\">\r\n        <h3 class=\"modal-title\">Duplicate {{ selectedTemplateName }}</h3>\r\n        <div class=\"modal-body\">\r\n          <clr-input-container>\r\n            <label>New template name</label>\r\n            <input clrInput [(ngModel)]=\"newTemplateName\" required />\r\n            <clr-control-helper\r\n              >What should the new template be named?</clr-control-helper\r\n            >\r\n          </clr-input-container>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline\"\r\n            (click)=\"hideTemplateModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"newTemplateName.length < 1\"\r\n            (click)=\"duplicateTemplate(selectedTemplateName, newTemplateName)\"\r\n          >\r\n            Duplicate\r\n          </button>\r\n        </div>\r\n      </clr-modal>\r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"clr-break-row\"></div>\r\n  <div class=\"clr-col-md-4\">\r\n    <h1>You can do this.</h1>\r\n  </div>\r\n  <div class=\"clr-break-row\"></div>\r\n  <div class=\"clr-col-md-4\">\r\n\r\n  </div>\r\n  <div class=\"clr-break-row\"></div>\r\n  <div class=\"clr-col-md-4\">\r\n    <clr-dropdown style=\"width: 100%;\">\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        clrDropdownTrigger\r\n        [disabled]=\"!userVerified\"\r\n      >\r\n        Copy an old report\r\n        <clr-icon shape=\"caret down\"></clr-icon>\r\n      </button>\r\n      <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\r\n        <button clrDropdownItem routerLink=\"/report/branch-usage/1\">\r\n          <clr-icon shape=\"plus-circle\"></clr-icon> From blank template\r\n        </button>\r\n        <button clrDropdownItem routerLink=\"/report/branch-usage/1\">\r\n          <clr-icon shape=\"unarchive\"></clr-icon> Based on a previous one\r\n        </button>\r\n      </clr-dropdown-menu>\r\n    </clr-dropdown>\r\n  </div>\r\n  <div class=\"clr-break-row\"></div>\r\n  <div class=\"clr-col-md-4\">\r\n    <button\r\n      class=\"btn btn-outline-primary\"\r\n      style=\"width: 100%;\"\r\n      [disabled]=\"!userVerified\"\r\n    >\r\n      View old reports\r\n    </button>\r\n  </div>\r\n  <div class=\"clr-break-row\"></div> -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConstantService {\n  private _constants: BehaviorSubject<Object>;\n  constructor(private _AngularFirestore: AngularFirestore) {\n    this._constants = new BehaviorSubject<Object>(null);\n    let constDoc = this._AngularFirestore.doc<any>('constants/constants');\n    constDoc.valueChanges();\n    constDoc.valueChanges().subscribe((constants) => {\n      console.log(constants);\n      this._constants.next(constants);\n    });\n  }\n\n  get constants(): Observable<Object> {\n    return this._constants.asObservable();\n  }\n}\n","import { UnifiedReport } from './../interfaces/report';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport {\r\n  BehaviorSubject,\r\n  range,\r\n  Observable,\r\n  Subscription,\r\n  combineLatest,\r\n} from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Page } from 'src/app/interfaces/page';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { first } from 'rxjs/operators';\r\nimport { resolve } from 'dns';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ReportService {\r\n  private report$: BehaviorSubject<Report>;\r\n  private _report: Report;\r\n  private page$: BehaviorSubject<Page>;\r\n  private _page: Page;\r\n  constructor(\r\n    private _AngularFirestore: AngularFirestore,\r\n    private _Router: Router,\r\n    private _UserService: UserService\r\n  ) {\r\n    this.report$ = new BehaviorSubject<Report>(this._report); //undefined\r\n    this.page$ = new BehaviorSubject<Page>(this._page); //undefined\r\n  }\r\n\r\n  openReport(reportID: string, startPage: number = 0): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      let reportDoc = this._AngularFirestore.doc<Report>(\r\n        '/reports/' + reportID\r\n      );\r\n      //grab the requested\r\n      reportDoc\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((report) => {\r\n          this._report = report;\r\n          this.report$.next(report);\r\n          if (this._report === undefined) {\r\n            console.error(\r\n              '[Report Serv] Report ' + reportID + ' does not exist.'\r\n            );\r\n            reject();\r\n          } else {\r\n            reportDoc\r\n              .collection('pages')\r\n              .doc<Page>(startPage.toString())\r\n              .valueChanges()\r\n              .pipe(first())\r\n              .subscribe((page: Page) => {\r\n                this._page = page;\r\n                this.page$.next(page);\r\n                console.log(this._page);\r\n                console.log(\r\n                  '[Report Serv] Report and page successfully opened.'\r\n                );\r\n                resolve();\r\n              });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  generateReportID(\r\n    checkUniqueness = true,\r\n    length = 4,\r\n    override?: string\r\n  ): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      let chars = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n      let result = '';\r\n      //randomly generate a string if one isn't provided\r\n      if (!navigator.onLine) {\r\n        reject('offline');\r\n      } else if (override) {\r\n        result = override;\r\n      } else {\r\n        for (let i = length; i > 0; --i) {\r\n          result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n      }\r\n      //if enabled, check the uniqueness with the remote database\r\n      if (checkUniqueness) {\r\n        let reportCollection = this._AngularFirestore.collection(\r\n          '/reports',\r\n          (ref) => ref.where('id', '==', result)\r\n        );\r\n        reportCollection\r\n          .valueChanges()\r\n          .pipe(first())\r\n          .subscribe((observer) => {\r\n            if (observer.length > 0) {\r\n              console.warn(\r\n                '[Report Serv] Generated ID is not unique. Retrying...'\r\n              );\r\n              this.generateReportID().then((result) => resolve(result));\r\n            } else resolve(result);\r\n          });\r\n      } else resolve(result);\r\n    });\r\n  }\r\n\r\n  createNewReport(templateID: string): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      if (!navigator.onLine) {\r\n        reject();\r\n      } else {\r\n        let templateReport: Report;\r\n        let templateDoc = this._AngularFirestore.doc<Report>(\r\n          '/templates/' + templateID\r\n        );\r\n        templateDoc\r\n          .get()\r\n          .pipe(first())\r\n          .subscribe(\r\n            (report) => {\r\n              templateReport = report.data() as Report;\r\n              this.generateReportID().then((newReportID) => {\r\n                let reportDoc = this._AngularFirestore.doc<Report>(\r\n                  '/reports/' + newReportID\r\n                );\r\n                templateReport.id = newReportID;\r\n                templateReport.author = this._UserService.getUserSnapshot().email;\r\n                templateReport.branch = this._UserService.getUserSnapshot().branch;\r\n                reportDoc.set(templateReport).then(\r\n                  //create the pages in a collection\r\n                  () => {\r\n                    let pageCopyPromises: Promise<void>[] = [];\r\n                    templateReport.pageStatuses.forEach((status, index) => {\r\n                      let copyPromise = new Promise<void>((resolve, reject) => {\r\n                        let fromDoc = templateDoc\r\n                          .collection('pages')\r\n                          .doc<Page>(index.toString());\r\n                        fromDoc\r\n                          .valueChanges()\r\n                          .pipe(first())\r\n                          .subscribe((page) => {\r\n                            let toDoc = reportDoc\r\n                              .collection('pages')\r\n                              .doc(index.toString());\r\n                            console.log(page);\r\n                            toDoc.set(page).then(resolve).catch(reject);\r\n                          }, reject);\r\n                      });\r\n                      pageCopyPromises.push(copyPromise);\r\n                    });\r\n                    //once all pages are copied, resolve with the new ID.\r\n                    Promise.all(pageCopyPromises).then(() =>\r\n                      resolve(newReportID)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n            },\r\n            (error) => {\r\n              console.error(error);\r\n              reject();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  duplicateReport(reportID: string): Promise<string> {\r\n    console.log('[Report Serv] Duplicating ' + reportID);\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      //grab old template from database\r\n      this._AngularFirestore\r\n        .doc<Report>('/reports/' + reportID)\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((originalReport) => {\r\n          let newReport = originalReport;\r\n\r\n          console.log(newReport);\r\n          //reset templateID, id\r\n          this.generateReportID().then((newReportID) => {\r\n            newReport.templateID = originalReport.templateID;\r\n            newReport.id = newReportID;\r\n            newReport.completionStatus = 'incomplete';\r\n            //save new template to database\r\n            this._AngularFirestore\r\n              .doc('/reports/' + newReportID)\r\n              .set(newReport)\r\n              .then(() => {\r\n                let pagePromises: Promise<void>[] = [];\r\n                for (let i = 0; i < newReport.pageCount; i++) {\r\n                  this._AngularFirestore\r\n                    .doc<Page>(\r\n                      '/reports/' + reportID + '/pages/' + i.toString()\r\n                    )\r\n                    .valueChanges()\r\n                    .pipe(first())\r\n                    .subscribe((oldPage) => {\r\n                      pagePromises.push(\r\n                        this._AngularFirestore\r\n                          .doc(\r\n                            '/reports/' + newReportID + '/pages/' + i.toString()\r\n                          )\r\n                          .set(oldPage)\r\n                      );\r\n                    });\r\n                }\r\n                Promise.all(pagePromises).then(() => {\r\n                  console.log('Report duplicated successfully.');\r\n                  resolve(newReportID);\r\n                }, reject);\r\n              }, reject);\r\n          });\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  //this returns the full JSON string of a report with all its pages\r\n  getMagicString(reports: Report[]): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      let promiseList: Promise<UnifiedReport>[] = [];\r\n      reports.forEach((report) => {\r\n        promiseList.push(\r\n          new Promise<UnifiedReport>((resolve, reject) => {\r\n            let fullReport: UnifiedReport;\r\n            let reportHeader: Report;\r\n            let pages: Page[] = [];\r\n            let pagePromises: Promise<void>[] = [];\r\n            this._AngularFirestore\r\n              .doc<Report>('/reports/' + report.id)\r\n              .get()\r\n              .pipe(first())\r\n              .subscribe((docSnap) => {\r\n                reportHeader = docSnap.data() as Report;\r\n                for (let i = 0; i < reportHeader.pageCount; i++) {\r\n                  pagePromises.push(\r\n                    new Promise<void>((resolve, reject) => {\r\n                      this._AngularFirestore\r\n                        .doc('/reports/' + report.id + '/pages/' + i.toString())\r\n                        .get()\r\n                        .pipe(first())\r\n                        .subscribe((pageSnap) => {\r\n                          pages.push(pageSnap.data() as Page);\r\n                          resolve();\r\n                        }, reject);\r\n                    })\r\n                  );\r\n                }\r\n                //once all pages are finished loading\r\n                Promise.all(pagePromises).then(() => {\r\n                  fullReport = {\r\n                    id: reportHeader.id,\r\n                    templateID: reportHeader.templateID,\r\n                    title: reportHeader.title || null,\r\n                    coverageDate: reportHeader.coverageDate || null,\r\n                    submitDate: reportHeader.submitDate || null,\r\n                    author: reportHeader.author || null,\r\n                    branch: reportHeader.branch || null,\r\n                    additionalInfo: reportHeader.additionalInfo || null,\r\n                    pageStatuses: reportHeader.pageStatuses || null,\r\n                    pageCount: reportHeader.pageCount,\r\n                    completionStatus: reportHeader.completionStatus,\r\n                    pages: pages,\r\n                  };\r\n                  resolve(fullReport);\r\n                });\r\n              });\r\n          })\r\n        );\r\n      });\r\n\r\n      Promise.all(promiseList).then((fullReports: UnifiedReport[]) => {\r\n        let resultString = JSON.stringify({ reports: fullReports });\r\n        resolve(resultString);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  closeReport(redirectToHome: boolean = true) {\r\n    this._report = null;\r\n    this.report$.next(null);\r\n    if (redirectToHome) {\r\n      //go to the home page when closed\r\n      this._Router.navigate(['']);\r\n    }\r\n    console.log('[Report Serv] The report has been successfully closed.');\r\n  }\r\n\r\n  deleteReport(report: Report): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      let reportDoc = this._AngularFirestore.doc('/reports/' + report.id);\r\n      //delete all pages\r\n      for (let i = 0; i < report.pageCount; i++) {\r\n        let pageDoc = reportDoc.collection('pages').doc(i.toString());\r\n        pageDoc.delete();\r\n      }\r\n      reportDoc.delete().then(\r\n        () => {\r\n          console.log('Report deleted');\r\n          resolve();\r\n        },\r\n        (reason) => {\r\n          console.error('Deletion failed: ' + reason);\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  openPage(pageNumber: number): Promise<void> {\r\n    console.log('[Report Serv] Opening page ' + pageNumber + '...');\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (!this._report || !navigator.onLine) {\r\n        console.error(\r\n          '[Report Serv] Cannot open page. No report is open or device offline.'\r\n        );\r\n        reject();\r\n      }\r\n      let pageDoc = this._AngularFirestore.doc<Page>(\r\n        '/reports/' + this._report.id + '/pages/' + pageNumber.toString()\r\n      );\r\n      pageDoc\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((page) => {\r\n          this._page = page;\r\n          this.page$.next(page);\r\n          resolve();\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  //this marks the report as 'complete' and grants visibility to admins\r\n  submitReport(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (navigator.onLine === false) {\r\n        console.error('[Report Serv] Cannot submit report. Device offline.');\r\n        reject(); //reject if no report is open.\r\n      }\r\n      if (!this._report) {\r\n        console.error('[Report Serv] Cannot submit report. None is open.');\r\n        reject(); //reject if no report is open.\r\n      }\r\n      this._report.completionStatus = 'complete';\r\n      this._report.submitDate = new Date().toISOString();\r\n      this._report.author = this._UserService.getUserSnapshot().email;\r\n      this.report$.next(this._report);\r\n      this.saveReportOnline().then(() => {\r\n        this.closeReport();\r\n        resolve();\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  attachToBranch(updateOnline: boolean = false) {\r\n    this._report.branch = this._UserService.getUserSnapshot().branch;\r\n    this.report$.next(this._report);\r\n    if (updateOnline) {\r\n      this.saveReportOnline();\r\n    }\r\n  }\r\n\r\n  getReportObservable() {\r\n    return this.report$.asObservable();\r\n  }\r\n  get report(): Report {\r\n    return this._report;\r\n  }\r\n  getPageObservable() {\r\n    return this.page$.asObservable();\r\n  }\r\n  get page(): Page {\r\n    return this._page;\r\n  }\r\n\r\n  saveReportOnline(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (!navigator.onLine) {\r\n        console.error(\r\n          '[Report Serv] Cannot save report online. Device offline'\r\n        );\r\n        reject();\r\n      }\r\n      if (this._report) {\r\n        let reportDoc = this._AngularFirestore.doc<Report>(\r\n          'reports/' + this._report.id\r\n        );\r\n        reportDoc.set(this._report).then(() => {\r\n          console.log('[Report Serv] Successfully saved report to server.');\r\n          resolve();\r\n        }, reject);\r\n      } else {\r\n        console.error('[Report Serv] Cannot save report online. None is open.');\r\n        reject();\r\n      }\r\n    });\r\n  }\r\n\r\n  savePageOnline(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (!navigator.onLine) {\r\n        console.error('[Report Serv] Cannot save page online. Device offline');\r\n        reject();\r\n      }\r\n      if (this._page) {\r\n        let pageDoc = this._AngularFirestore.doc<Page>(\r\n          'reports/' + this._report.id + '/pages/' + this._page.index\r\n        );\r\n        pageDoc.set(this._page).then(() => {\r\n          console.log(\r\n            '[Report Serv] Successfully saved page ' +\r\n              this._page.index +\r\n              ' to server.'\r\n          );\r\n          resolve();\r\n        }, reject);\r\n      } else {\r\n        console.error('[Report Serv] Cannot save page online. None is open.');\r\n        reject();\r\n      }\r\n    });\r\n  }\r\n\r\n  setSectionValue(pageIndex: number, sectionIndex: number, value: any) {\r\n    console.log(value);\r\n  }\r\n\r\n  setCoverageDate(isoDate: string) {\r\n    if (!isoDate || isNaN(new Date(isoDate).getTime())) {\r\n      console.warn('[Report Serv] Cannot set coverage date. Invalid date.');\r\n      return;\r\n    }\r\n    console.log('[Report Serv] Setting coverage date to ' + isoDate);\r\n    this._report.coverageDate = isoDate;\r\n    this.report$.next(this._report);\r\n  }\r\n  setSubmitDate(isoDate: string) {\r\n    if (isNaN(new Date(isoDate).getTime())) {\r\n      console.error('[Report Serv] Cannot set coverage date. Invalid date.');\r\n      return;\r\n    }\r\n    console.log('[Report Serv] Setting submit date to ' + isoDate);\r\n    this._report.submitDate = isoDate;\r\n    this.report$.next(this._report);\r\n  }\r\n  setAuthor() {\r\n    this._report.author = this._UserService.getUserSnapshot().email;\r\n    this.report$.next(this._report);\r\n  }\r\n  setAdditionalInfo(info: string) {\r\n    console.log('[Report Serv] Setting additional info to ' + info);\r\n    this._report.additionalInfo = info;\r\n    this.report$.next(this._report);\r\n  }\r\n  setTitle(title: string) {\r\n    console.log('[Report Serv] Setting title to ' + title);\r\n    this._report.title = title;\r\n  }\r\n  setSubject(subject: string) {\r\n    console.log('[Report Serv] Setting subject to ' + subject);\r\n    this._report.title = subject;\r\n  }\r\n  setTags(tags: string[]) {\r\n    console.log('[Report Serv] Setting tags to ' + tags);\r\n    this._report.tags = tags;\r\n  }\r\n  setPageStatus(pageIndex: number, status: string) {\r\n    if (!(status === 'complete' || status === 'incomplete')) {\r\n      console.warn('Is ' + status + ' a valid status?');\r\n    }\r\n    this._report.pageStatuses[pageIndex] = status;\r\n    this.report$.next(this._report);\r\n  }\r\n  setCompletionStatus(status: string) {\r\n    if (!(status === 'complete' || status === 'incomplete')) {\r\n      console.warn('Is ' + status + ' a valid status?');\r\n    }\r\n    this._report.completionStatus = status;\r\n  }\r\n\r\n  fetchReports(reportIDs: string[]): Promise<Report[]> {\r\n    let fetchPromises: Promise<Report>[] = [];\r\n    reportIDs.forEach((reportID) => {\r\n      let reportDoc = this._AngularFirestore.doc<Report>('reports/' + reportID);\r\n      let fetchPromise = new Promise<Report>((resolve, reject) => {\r\n        reportDoc\r\n          .valueChanges()\r\n          .pipe(first())\r\n          .subscribe((report) => {\r\n            resolve(report);\r\n          }, reject);\r\n      });\r\n      fetchPromises.push(fetchPromise);\r\n    });\r\n    return Promise.all(fetchPromises);\r\n  }\r\n\r\n  fetchAllReports(): Promise<Report[]> {\r\n    if (\r\n      confirm(\r\n        'This will read all reports from the database, and may take a while. Are you sure?'\r\n      )\r\n    ) {\r\n      return new Promise<Report[]>((resolve, reject) => {\r\n        let queryCollection = this._AngularFirestore.collection<Report>(\r\n          '/reports',\r\n          (ref) => ref.orderBy('id')\r\n        );\r\n        queryCollection\r\n          .valueChanges()\r\n          .pipe(first())\r\n          .subscribe((reports) => {\r\n            resolve(reports);\r\n          }, reject);\r\n      });\r\n    } else {\r\n      return this.fetchAllReportsWithLimit(10);\r\n    }\r\n  }\r\n\r\n  fetchAllReportsWithLimit(sizeLimit: number): Promise<Report[]> {\r\n    return new Promise<Report[]>((resolve, reject) => {\r\n      let queryCollection = this._AngularFirestore.collection<Report>(\r\n        '/reports',\r\n        (ref) => ref.limit(sizeLimit).orderBy('id')\r\n      );\r\n      queryCollection\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((reports) => {\r\n          resolve(reports);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  fetchReportsByBranchWithLimit(\r\n    branch: string,\r\n    sizeLimit: number\r\n  ): Promise<Report[]> {\r\n    return new Promise<Report[]>((resolve, reject) => {\r\n      let queryCollection = this._AngularFirestore.collection<Report>(\r\n        '/reports',\r\n        (ref) =>\r\n          ref.where('branch', '==', branch).limit(sizeLimit).orderBy('id')\r\n      );\r\n      queryCollection\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((reports) => {\r\n          resolve(reports);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  fetchReportsByBranch(branch: string): Promise<Report[]> {\r\n    return new Promise<Report[]>((resolve, reject) => {\r\n      let queryCollection = this._AngularFirestore.collection<Report>(\r\n        '/reports',\r\n        (ref) => ref.where('branch', '==', branch).orderBy('id')\r\n      );\r\n      queryCollection\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((reports) => {\r\n          resolve(reports);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  pushTemplateObjectToDB(template: Report, pages: Page[]) {\r\n    let templateDoc = this._AngularFirestore.doc(\r\n      '/templates/' + template.templateID\r\n    );\r\n    templateDoc.set(template).then(() => {\r\n      let pageCollection = templateDoc.collection('pages');\r\n      pages.forEach((page, index) => {\r\n        pageCollection.doc(index.toString()).set(page);\r\n      });\r\n    });\r\n  }\r\n\r\n  getFullReportCount(): Promise<number> {\r\n    console.log('[Report Serv] Getting full report count');\r\n    return new Promise<number>((resolve, reject) => {\r\n      this._AngularFirestore\r\n        .collection('/reports')\r\n        .get()\r\n        .pipe(first())\r\n        .subscribe((snapshot) => {\r\n          resolve(snapshot.size);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  getReportCountByBranch(branchName: string): Promise<number> {\r\n    console.log('[Report Serv] Getting report count for ' + branchName);\r\n    return new Promise<number>((resolve, reject) => {\r\n      this._AngularFirestore\r\n        .collection('/reports', (ref) => ref.where('branch', '==', branchName))\r\n        .get()\r\n        .pipe(first())\r\n        .subscribe((snapshot) => {\r\n          resolve(snapshot.size);\r\n        }, reject);\r\n    });\r\n  }\r\n}\r\n","import { Page } from './../interfaces/page';\r\nimport { UnifiedReport } from './../interfaces/report';\r\nimport { UserService } from './user.service';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { first } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { rejects } from 'assert';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TemplateService {\r\n  private _templateNames: string[];\r\n  private templates$: BehaviorSubject<Map<string, Report>>;\r\n  private _templates: Map<string, Report>;\r\n\r\n  outlineFileName;\r\n\r\n  constructor(\r\n    public _AngularFirestore: AngularFirestore,\r\n    private _Router: Router,\r\n    private _UserServ: UserService\r\n  ) {\r\n    this._templateNames = [];\r\n    this._templates = new Map();\r\n    this.templates$ = new BehaviorSubject<Map<string, Report>>(this._templates);\r\n    _AngularFirestore\r\n      .collection('templates')\r\n      .get()\r\n      .subscribe((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this._templates.set(doc.id, doc.data() as Report);\r\n          this._templateNames.push(doc.id);\r\n        });\r\n        this.templates$.next(this._templates);\r\n      });\r\n    this._UserServ.getUserObservable().subscribe((user) => {\r\n      console.log('[Template Serv] User changed, refreshing template list');\r\n      this.refreshTemplateList();\r\n    });\r\n  }\r\n\r\n  refreshTemplateList() {\r\n    this._AngularFirestore\r\n      .collection('templates')\r\n      .get()\r\n      .pipe(first())\r\n      .subscribe((snapshot) => {\r\n        this._templateNames = [];\r\n        this._templates.clear();\r\n        snapshot.forEach((doc) => {\r\n          this._templates.set(doc.id, doc.data() as Report);\r\n          this._templateNames.push(doc.id);\r\n        });\r\n        console.log(this._templateNames);\r\n        this.templates$.next(this._templates);\r\n      });\r\n  }\r\n\r\n  get templateNames() {\r\n    return this._templateNames;\r\n  }\r\n\r\n  get visibleTemplates(): Report[] {\r\n    let templates: Report[] = [];\r\n    this._templates.forEach((val, key, map) => {\r\n      if (!val.hidden) {\r\n        templates.push(val);\r\n      }\r\n    });\r\n    return templates;\r\n  }\r\n\r\n  get templateObservable() {\r\n    return this.templates$.asObservable();\r\n  }\r\n\r\n  get templateSnapshot() {\r\n    return this._templates;\r\n  }\r\n\r\n  markHidden(templateID: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      let doc = this._AngularFirestore.doc<Report>('/templates/' + templateID);\r\n      doc.get().subscribe((docSnapshot) => {\r\n        if (docSnapshot.exists) {\r\n          doc.update({ hidden: true }).then(() => {\r\n            let oldTemplate = this._templates.get(templateID);\r\n            oldTemplate.hidden = true;\r\n            this._templates.set(templateID, oldTemplate);\r\n            resolve();\r\n          }, reject);\r\n        } else {\r\n          console.error(\r\n            'Cannot mark ' + templateID + ' as hidden. Template does not exist.'\r\n          );\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  markVisible(templateID: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      let doc = this._AngularFirestore.doc<Report>('/templates/' + templateID);\r\n      doc.get().subscribe((docSnapshot) => {\r\n        if (docSnapshot.exists) {\r\n          doc.update({ hidden: false }).then(() => {\r\n            let oldTemplate = this._templates.get(templateID);\r\n            oldTemplate.hidden = false;\r\n            this._templates.set(templateID, oldTemplate);\r\n            resolve();\r\n          }, reject);\r\n        } else {\r\n          console.error(\r\n            'Cannot mark ' +\r\n              templateID +\r\n              ' as visible. Template does not exist.'\r\n          );\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  openTemplate(templateID: string) {\r\n    console.log('[Template Serv] Opening ' + templateID);\r\n    this._Router.navigate(['builder'], { queryParams: { open: templateID } });\r\n  }\r\n  duplicateTemplate(templateID: string, newTemplateID: string): Promise<void> {\r\n    console.log('[Template Serv] Duplicating ' + templateID);\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      //grab old template from database\r\n      this._AngularFirestore\r\n        .doc<Report>('/templates/' + templateID)\r\n        .valueChanges()\r\n        .pipe(first())\r\n        .subscribe((template) => {\r\n          let newTemplate = template;\r\n          //reset templateID, id\r\n          newTemplate.templateID = newTemplateID;\r\n          newTemplate.id = '';\r\n          //save new template to database\r\n          this._AngularFirestore\r\n            .doc('/templates/' + newTemplateID)\r\n            .set(newTemplate)\r\n            .then(() => {\r\n              let pagePromises: Promise<void>[] = [];\r\n              for (let i = 0; i < newTemplate.pageCount; i++) {\r\n                this._AngularFirestore\r\n                  .doc<Page>(\r\n                    '/templates/' + templateID + '/pages/' + i.toString()\r\n                  )\r\n                  .valueChanges()\r\n                  .pipe(first())\r\n                  .subscribe((page) => {\r\n                    pagePromises.push(\r\n                      this._AngularFirestore\r\n                        .doc<Page>(\r\n                          '/templates/' +\r\n                            newTemplateID +\r\n                            '/pages/' +\r\n                            i.toString()\r\n                        )\r\n                        .set(page)\r\n                    );\r\n                  });\r\n              }\r\n\r\n              Promise.all(pagePromises).then(() => {\r\n                console.log('Template duplicated successfully.');\r\n                this.refreshTemplateList();\r\n                resolve();\r\n              }, reject);\r\n            }, reject);\r\n        }, reject);\r\n    });\r\n  }\r\n  deleteTemplate(templateID: string): Promise<void> {\r\n    console.log('[Template Serv] Deleting ' + templateID);\r\n    return new Promise<void>((resolve, reject) => {\r\n      let templateDoc = this._AngularFirestore.doc('/templates/' + templateID);\r\n      let template = this._templates.get(templateID);\r\n      let confirmation = prompt(\r\n        'Are you sure? To delete, type \"confirm\": ',\r\n        ''\r\n      );\r\n      if (!(confirmation && confirmation == 'confirm')) {\r\n        reject();\r\n      } else {\r\n        if (!template) {\r\n          reject();\r\n        } else {\r\n          //delete all pages\r\n          for (let i = 0; i < template.pageCount; i++) {\r\n            this._AngularFirestore\r\n              .doc('/templates/' + templateID + '/pages/' + i.toString())\r\n              .delete();\r\n          }\r\n\r\n          templateDoc.delete().then(() => {\r\n            this.refreshTemplateList();\r\n            console.log('Deleted ' + templateDoc.ref.path);\r\n            resolve();\r\n          }, reject);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  newTemplate() {\r\n    console.log('[Template Serv] Opening fresh template');\r\n    this._Router.navigate(['builder']);\r\n  }\r\n  saveTemplate(template: UnifiedReport): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      console.log(\r\n        '[Template Serv] Saving template ' + template.templateID + '...'\r\n      );\r\n      let templateHeader: Report = {\r\n        id: template.id,\r\n        templateID: template.templateID,\r\n        pageCount: template.pageCount,\r\n        pageStatuses: template.pageStatuses,\r\n        completionStatus: template.completionStatus,\r\n      };\r\n      this._AngularFirestore\r\n        .doc<Report>('/templates/' + template.templateID)\r\n        .set(templateHeader)\r\n        .then(() => {\r\n          let pagePromises: Promise<void>[] = [];\r\n          template.pages.forEach((page) => {\r\n            pagePromises.push(\r\n              this._AngularFirestore\r\n                .doc<Page>(\r\n                  '/templates/' +\r\n                    template.templateID +\r\n                    '/pages/' +\r\n                    page.index.toString()\r\n                )\r\n                .set(page)\r\n            );\r\n          });\r\n          Promise.all(pagePromises).then(() => {\r\n            console.log('[Template Serv] Template saved.');\r\n            resolve();\r\n          }, reject);\r\n        }, reject);\r\n    });\r\n  }\r\n  markTemplateHidden(templateID: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {});\r\n  }\r\n}\r\n","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { auth } from 'firebase/app';\r\nimport { BehaviorSubject, Observable, observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from 'src/app/interfaces/user';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n} from '@angular/fire/firestore';\r\nimport * as firebase from 'firebase/app';\r\nimport { first } from 'rxjs/operators';\r\nimport { promise } from 'protractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private _user: User;\r\n  private user$: BehaviorSubject<User>;\r\n\r\n  constructor(\r\n    public _AngularFireAuth: AngularFireAuth,\r\n    private _AngularFirestore: AngularFirestore\r\n  ) {\r\n    this.user$ = new BehaviorSubject<User>(null);\r\n    _AngularFireAuth.user.subscribe((authUser) => {\r\n      if (!authUser) {\r\n        //if no user is logged in, set the user to null\r\n        this._user = null;\r\n        this.user$.next(this._user);\r\n      } else {\r\n        //else fetch the user data from the server\r\n        let userDoc = _AngularFirestore.doc<User>('users/' + authUser.email);\r\n        userDoc\r\n          .valueChanges()\r\n          .pipe(first())\r\n          .subscribe((user) => {\r\n            if (user.emailVerified !== authUser.emailVerified) {\r\n              userDoc\r\n                .update({ emailVerified: authUser.emailVerified })\r\n                .then(() => {\r\n                  user.emailVerified = authUser.emailVerified;\r\n                  this._user = user;\r\n                  this.user$.next(this._user);\r\n                });\r\n            } else {\r\n              this._user = user;\r\n              this.user$.next(this._user);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  logIn(email: string, password: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this._AngularFireAuth.signInWithEmailAndPassword(email, password).then(\r\n        (value) => {\r\n          console.log('[User Serv] Logged in');\r\n          resolve();\r\n        },\r\n        (reason) => {\r\n          console.error('[User Serv] Login failed: ' + reason);\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  logOut(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this._AngularFireAuth.signOut().then(\r\n        (value) => {\r\n          console.log('[User Serv] Signed out');\r\n          resolve();\r\n        },\r\n        (reason) => {\r\n          console.error('[User Serv] Signout failed: ' + reason);\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n  createAccount(user: User, password: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this._AngularFireAuth\r\n        .createUserWithEmailAndPassword(user.email, password)\r\n        .then((authcred: auth.UserCredential) => {\r\n          this._AngularFirestore\r\n            .doc<User>('users/' + user.email)\r\n            .set(user)\r\n            .then(resolve)\r\n            .catch((error) => {\r\n              console.log('[User Serv] Error creating account: ' + error);\r\n              reject(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log('[User Serv] Error creating account: ' + error);\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  getUserObservable(): Observable<User> {\r\n    return this.user$.asObservable();\r\n  }\r\n  getUserSnapshot(): User {\r\n    return this._user;\r\n  }\r\n\r\n  setBranch(newBranch: string): Promise<void> {\r\n    let userDoc = this._AngularFirestore.doc<User>('users/' + this._user.email);\r\n    return userDoc.update({ branch: newBranch }).then(() => {\r\n      this._user.branch = newBranch;\r\n    });\r\n  }\r\n\r\n  sendVerificationEmail(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      firebase.auth().currentUser.sendEmailVerification().then(resolve, reject);\r\n    });\r\n  }\r\n}\r\n","export const config = {\r\n  firebase: {\r\n    apiKey: 'AIzaSyBjMPuySzya4rhD6IZTYYIPFKAKS342rsI',\r\n    authDomain: 'ebrpl-reporting.firebaseapp.com',\r\n    databaseURL: 'https://ebrpl-reporting.firebaseio.com',\r\n    projectId: 'ebrpl-reporting',\r\n    storageBucket: 'ebrpl-reporting.appspot.com',\r\n    messagingSenderId: '776684824485',\r\n    appId: '1:776684824485:web:fef2d9dfec9715b6ab6a4c',\r\n  },\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBjMPuySzya4rhD6IZTYYIPFKAKS342rsI',\n    authDomain: 'ebrpl-reporting.firebaseapp.com',\n    databaseURL: 'https://ebrpl-reporting.firebaseio.com',\n    projectId: 'ebrpl-reporting',\n    storageBucket: 'ebrpl-reporting.appspot.com',\n    messagingSenderId: '776684824485',\n    appId: '1:776684824485:web:fef2d9dfec9715b6ab6a4c',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}